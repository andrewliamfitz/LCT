matYukawaCubic = Table[If[yukawaCode`Private`nBL == yukawaCode`Private`nBR + 
         1 && MatchQ[yukawaCode`Private`nFL - yukawaCode`Private`nFR, 
        -2 | 0 | 2], Catch[ArrayFlatten[Outer[yukawaCode`Private`primBlock[
          yukawaCode`Private`yukawaCubic, -1, yukawaCode`Private`nFR - 
           yukawaCode`Private`nFL], (If[Length[#1] == 0, Throw[{}], #1] & )[
          Insert[PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{}, 
             Insert[0, 0, 2], {{}}], PadRight[{1, 1}, Insert[0, 0, 2], 
             {{}}]][[yukawaCode`Private`nBL + 1,yukawaCode`Private`nFL + 
            1]]], (If[Length[#1] == 0, Throw[{}], #1] & )[
          Insert[PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{}, 
             Insert[0, 0, 2], {{}}], PadRight[{1, 1}, Insert[0, 0, 2], 
             {{}}]][[yukawaCode`Private`nBR + 1,yukawaCode`Private`nFR + 
            1]]], 1]]], SparseArray[{}, {yukawaCode`Private`stateCount[
         Insert[PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{}, 
            Insert[0, 0, 2], {{}}], PadRight[{1, 1}, Insert[0, 0, 2], {{}}]][[
          yukawaCode`Private`nBL + 1,yukawaCode`Private`nFL + 1]]], 
        yukawaCode`Private`stateCount[Insert[PadRight[{}, Insert[0, 0, 2], 
            {{}}], PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{1, 1}, 
            Insert[0, 0, 2], {{}}]][[yukawaCode`Private`nBR + 1,
          yukawaCode`Private`nFR + 1]]]}]], {yukawaCode`Private`nBL, 0, 2}, 
     {yukawaCode`Private`nBR, 0, 2}, {yukawaCode`Private`nFL, 0, 
      -1 + {3}[[2]]}, {yukawaCode`Private`nFR, 0, -1 + {3}[[2]]}]
 
yukawaCode`Private`primBlock[yukawaCode`Private`operator_, 
     yukawaCode`Private`dnB_, yukawaCode`Private`dnF_] = 
    Function[{yukawaCode`Private`level1, yukawaCode`Private`level2}, 
     With[{yukawaCode`Private`lL = yukawaCode`Private`level1["l"], 
       yukawaCode`Private`lR = yukawaCode`Private`level2["l"], 
       yukawaCode`Private`degBL = yukawaCode`Private`level1["degB"], 
       yukawaCode`Private`degBR = yukawaCode`Private`level2["degB"], 
       yukawaCode`Private`degFL = yukawaCode`Private`level1["degF"], 
       yukawaCode`Private`degFR = yukawaCode`Private`level2["degF"], 
       yukawaCode`Private`nB = yukawaCode`Private`level1["nB"], 
       yukawaCode`Private`nF = yukawaCode`Private`level1["nF"]}, 
      SparseArray[Outer[Total[Table[Flatten[#1[[yukawaCode`Private`kL + 
                1]]] . yukawaCode`Private`monomialBlock[
              yukawaCode`Private`operator, {yukawaCode`Private`nB, 
               yukawaCode`Private`nB + yukawaCode`Private`dnB}, 
              {yukawaCode`Private`nF, yukawaCode`Private`nF + 
                yukawaCode`Private`dnF}, {yukawaCode`Private`degBL + 
                yukawaCode`Private`kL, yukawaCode`Private`degBR + 
                yukawaCode`Private`kR}, {yukawaCode`Private`degFL + 
                yukawaCode`Private`lL - yukawaCode`Private`kL, 
               yukawaCode`Private`degFR + yukawaCode`Private`lR - 
                yukawaCode`Private`kR}] . Flatten[#2[[yukawaCode`Private`kR + 
                1]]], {yukawaCode`Private`kL, 0, yukawaCode`Private`lL}, 
            {yukawaCode`Private`kR, 0, yukawaCode`Private`lR}], 2] & , 
         yukawaCode`Private`level1["states"], yukawaCode`Private`level2[
          "states"], 1]]*yukawaCode`Private`factor[yukawaCode`Private`nB + 
         (3*yukawaCode`Private`nF)/2 + yukawaCode`Private`degBL + 
         yukawaCode`Private`degFL + yukawaCode`Private`lL, 
        (yukawaCode`Private`nB + yukawaCode`Private`dnB) + 
         (3*(yukawaCode`Private`nF + yukawaCode`Private`dnF))/2 + 
         yukawaCode`Private`degBR + yukawaCode`Private`degFR + 
         yukawaCode`Private`lR]*yukawaCode`Private`factorM[
        yukawaCode`Private`operator]]]
 
yukawaCode`Private`monomialBlock[yukawaCode`Private`operator_, 
     {yukawaCode`Private`nBL_, yukawaCode`Private`nBR_}, 
     {yukawaCode`Private`nFL_, yukawaCode`Private`nFR_}, 
     {yukawaCode`Private`degB1_, yukawaCode`Private`degB2_}, 
     {yukawaCode`Private`degF1_, yukawaCode`Private`degF2_}] := 
    yukawaCode`Private`monomialBlock[yukawaCode`Private`operator, 
      {yukawaCode`Private`nBL, yukawaCode`Private`nBR}, 
      {yukawaCode`Private`nFL, yukawaCode`Private`nFR}, 
      {yukawaCode`Private`degB1, yukawaCode`Private`degB2}, 
      {yukawaCode`Private`degF1, yukawaCode`Private`degF2}] = 
     With[{yukawaCode`Private`a1List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degB1, yukawaCode`Private`degB2] + 
            1] & ) /@ yukawaCode`Private`monomialsBoson[
          yukawaCode`Private`nBL, yukawaCode`Private`degB1], 
       yukawaCode`Private`a2List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degB1, yukawaCode`Private`degB2] + 
            1] & ) /@ yukawaCode`Private`monomialsBoson[
          yukawaCode`Private`nBR, yukawaCode`Private`degB2], 
       yukawaCode`Private`b1List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degF1, yukawaCode`Private`degF2] + 
            1] & ) /@ yukawaCode`Private`monomialsFermion[
          yukawaCode`Private`nFL, yukawaCode`Private`degF1], 
       yukawaCode`Private`b2List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degF1, yukawaCode`Private`degF2] + 
            1] & ) /@ yukawaCode`Private`monomialsFermion[
          yukawaCode`Private`nFR, yukawaCode`Private`degF2]}, 
      SparseArray[Outer[yukawaCode`Private`operator, 
        Flatten[Outer[List, yukawaCode`Private`a1List, 
          yukawaCode`Private`b1List, 1], 1], 
        Flatten[Outer[List, yukawaCode`Private`a2List, 
          yukawaCode`Private`b2List, 1], 1], 1]]]
 
yukawaCode`Private`cfBinCount = CompiledFunction[{11, 12., 5468}, 
     {{_Integer, 1}, _Integer}, {{2, 1, 0}, {2, 0, 0}, {2, 1, 2}}, 
     {{0, {2, 0, 4}}, {1, {2, 0, 2}}}, {0, 10, 0, 0, 3}, 
     {{6, 0, 6}, {6, 4, 3}, {35, 6, 2, 2}, {6, 4, 5}, {3, 2}, 
      {36, 3, 4, 2, 2}, {4, 5, 6, -1}, {33, 0, 6}, {6, 4, 8}, {3, 6}, 
      {37, 0, 8, 2, 1}, {38, 2, 0, 1, 0, 9}, {37, 0, 8, 2, 1}, {12, 9, 2, 7}, 
      {39, 2, 0, 1, 0, 7}, {4, 8, 6, -5}, {1}}, 
     Function[{yukawaCode`Private`k, yukawaCode`Private`max}, 
      Module[{yukawaCode`Private`lst}, yukawaCode`Private`lst = 
         Table[0, {yukawaCode`Private`max}]; 
        Scan[yukawaCode`Private`lst[[#1]]++ & , yukawaCode`Private`k]; 
        yukawaCode`Private`lst]], Evaluate, LibraryFunction["/Users/liam/Libr\
ary/Mathematica/ApplicationData/CCompilerDriver/BuildFolder/Macintosh-414-516\
42/compiledFunction8.dylib", "compiledFunction8", {{Integer, 1, "Constant"}, 
       {Integer, 0, "Constant"}}, {Integer, 1}]]
 
yukawaCode`Private`monomialsBoson[yukawaCode`Private`n_, 
     yukawaCode`Private`deg_] := yukawaCode`Private`monomialsBoson[
      yukawaCode`Private`n, yukawaCode`Private`deg] = 
     IntegerPartitions[yukawaCode`Private`deg + yukawaCode`Private`n, 
      {yukawaCode`Private`n}]
 
yukawaCode`Private`monomialsFermion[yukawaCode`Private`n_, 
     yukawaCode`Private`deg_] := yukawaCode`Private`monomialsFermion[
      yukawaCode`Private`n, yukawaCode`Private`deg] = 
     (#1 + Reverse[Range[yukawaCode`Private`n] - 1] & ) /@ 
      yukawaCode`Private`monomialsBoson[yukawaCode`Private`n, 
       yukawaCode`Private`deg + yukawaCode`Private`n - 
        (yukawaCode`Private`n*(yukawaCode`Private`n + 1))/2]
 
yukawaCode`Private`factor[yukawaCode`Private`\[CapitalDelta]_, 
     yukawaCode`Private`\[CapitalDelta]p_] := 
    yukawaCode`Private`factor[yukawaCode`Private`\[CapitalDelta], 
      yukawaCode`Private`\[CapitalDelta]p] = 
     (Sqrt[Gamma[2*yukawaCode`Private`\[CapitalDelta]]*
         Gamma[2*yukawaCode`Private`\[CapitalDelta]p]]*
       (-1)^(yukawaCode`Private`\[CapitalDelta] - 
         yukawaCode`Private`\[CapitalDelta]p))/
      Gamma[yukawaCode`Private`\[CapitalDelta] + 
        yukawaCode`Private`\[CapitalDelta]p - 1]
 
yukawaCode`Private`factorM[yukawaCode`Private`yukawaCubic] = -1/(2*Sqrt[Pi])
 
yukawaCode`Private`factorM[yukawaCode`Private`yukawaQuartic] = 1/(4*Pi)
 
yukawaCode`Private`yukawaCubic[{yukawaCode`Private`a_, 
      yukawaCode`Private`b_}, {yukawaCode`Private`ap_, 
      yukawaCode`Private`bp_}, OptionsPattern[]] := 
    Block[{yukawaCode`Private`aDiff = yukawaCode`Private`a - 
        yukawaCode`Private`ap, yukawaCode`Private`bDiff = 
       yukawaCode`Private`b - yukawaCode`Private`bp, yukawaCode`Private`da, 
      yukawaCode`Private`db, yukawaCode`Private`aDiffAbs, 
      yukawaCode`Private`bDiffAbs, yukawaCode`Private`aBar, 
      yukawaCode`Private`apBar, yukawaCode`Private`bBar, 
      yukawaCode`Private`bpBar, yukawaCode`Private`k1, yukawaCode`Private`k2, 
      yukawaCode`Private`k3, yukawaCode`Private`s1, yukawaCode`Private`s2, 
      yukawaCode`Private`s3, yukawaCode`Private`k\[Psi], 
      yukawaCode`Private`k\[Psi]p, yukawaCode`Private`symFactor, 
      yukawaCode`Private`perm, yukawaCode`Private`result, 
      yukawaCode`Private`myPrint = If[OptionValue[yukawaCode`Private`debug], 
        Print, yukawaCode`Private`skipPrint], yukawaCode`Private`debug1 = 
       OptionValue[yukawaCode`Private`debug], 
      yukawaCode`Private`showDiagram1 = OptionValue[
        yukawaCode`Private`showDiagram]}, 
     yukawaCode`Private`da = Total[-yukawaCode`Private`aDiff]; 
      yukawaCode`Private`db = Total[-yukawaCode`Private`bDiff]; 
      Which[yukawaCode`Private`da == 1, Return[yukawaCode`Private`yukawaCubic[
         {yukawaCode`Private`ap, yukawaCode`Private`bp}, 
         {yukawaCode`Private`a, yukawaCode`Private`b}, 
         yukawaCode`Private`debug -> yukawaCode`Private`debug1, 
         yukawaCode`Private`showDiagram -> yukawaCode`Private`showDiagram1]], 
       yukawaCode`Private`da == -1 && (yukawaCode`Private`db == 0 || 
         yukawaCode`Private`db == 2 || yukawaCode`Private`db == -2), 
       yukawaCode`Private`myPrint["change of particle number is legal"]; , 
       True, yukawaCode`Private`myPrint[
         "change of particle number is illegal"]; Return[0]]; 
      yukawaCode`Private`aBar = Ramp[yukawaCode`Private`aDiff]; 
      If[Total[yukawaCode`Private`aBar] != 1, Return[0]]; 
      yukawaCode`Private`k1 = First[yukawaCode`Private`cfBinReconstruct[
         yukawaCode`Private`aBar]]; yukawaCode`Private`s1 = -1; 
      yukawaCode`Private`symFactor = Sqrt[yukawaCode`Private`a[[
         yukawaCode`Private`k1]]]; yukawaCode`Private`bDiffAbs = 
       Total[Abs[yukawaCode`Private`bDiff]]; yukawaCode`Private`result = 
       Total[Flatten[Reap[Which[yukawaCode`Private`bDiffAbs == 0, 
            yukawaCode`Private`myPrint["\n|\[Delta]b|=0, fermion part \
contracing same k from both sides."]; yukawaCode`Private`myPrint[
              "--- Iterating all possible fermion k\[Element]", 
              "\!\(\*OverscriptBox[\(k\),\(\[RightVector]\)]\)=", 
              yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`b]]; 
             Block[{yukawaCode`Private`k = 1}, Scan[(If[#1 != 0, 
                  Sow[yukawaCode`Private`symFactor*
                     yukawaCode`Private`yukawaCubicDiagram[
                      yukawaCode`Private`k1, yukawaCode`Private`s1, 
                      yukawaCode`Private`k, -1, yukawaCode`Private`k, 1]]; 
                   Sow[-(yukawaCode`Private`symFactor*
                      yukawaCode`Private`yukawaCubicDiagram[
                       yukawaCode`Private`k1, yukawaCode`Private`s1, 
                       yukawaCode`Private`k, 1, yukawaCode`Private`k, 
                       -1])]; ]; yukawaCode`Private`k++; ) & , 
               yukawaCode`Private`b]]; yukawaCode`Private`myPrint[
              "--- Iteration finished"], yukawaCode`Private`bDiffAbs == 2, 
            yukawaCode`Private`myPrint[
              "\n|\[Delta]b|=2, fermion part contracing a pair of different \
k."]; yukawaCode`Private`bBar = Ramp[yukawaCode`Private`bDiff]; 
             yukawaCode`Private`bpBar = Ramp[-yukawaCode`Private`bDiff]; 
             yukawaCode`Private`k\[Psi] = yukawaCode`Private`cfBinReconstruct[
               yukawaCode`Private`bBar]; yukawaCode`Private`k\[Psi]p = 
              yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`bpBar]; 
             yukawaCode`Private`myPrint["k=", yukawaCode`Private`k\[Psi], 
              ", k'=", yukawaCode`Private`k\[Psi]p]; 
             yukawaCode`Private`perm = Times @@ Table[(-1)^Total[
                   Take[yukawaCode`Private`b, yukawaCode`Private`k]], 
                 {yukawaCode`Private`k, yukawaCode`Private`k\[Psi]}]*Times @@ 
                Table[(-1)^Total[Take[yukawaCode`Private`bp, 
                    yukawaCode`Private`kp]], {yukawaCode`Private`kp, 
                  yukawaCode`Private`k\[Psi]p}]*If[Length[
                  yukawaCode`Private`k\[Psi]] == 1, 1, -1]; 
             {yukawaCode`Private`k2, yukawaCode`Private`k3} = 
              Join[Reverse[yukawaCode`Private`k\[Psi]], 
               yukawaCode`Private`k\[Psi]p]; {yukawaCode`Private`s2, 
               yukawaCode`Private`s3} = Join[yukawaCode`Private`k\[Psi]*0 - 
                1, yukawaCode`Private`k\[Psi]p*0 + 1]; 
             Sow[yukawaCode`Private`symFactor*yukawaCode`Private`perm*
               yukawaCode`Private`yukawaCubicDiagram[yukawaCode`Private`k1, 
                yukawaCode`Private`s1, yukawaCode`Private`k2, 
                yukawaCode`Private`s2, yukawaCode`Private`k3, 
                yukawaCode`Private`s3]]; Sow[yukawaCode`Private`symFactor*(
                -yukawaCode`Private`perm)*
               yukawaCode`Private`yukawaCubicDiagram[yukawaCode`Private`k1, 
                yukawaCode`Private`s1, yukawaCode`Private`k3, 
                yukawaCode`Private`s3, yukawaCode`Private`k2, 
                yukawaCode`Private`s2]]; , True, yukawaCode`Private`myPrint[
              "|\[Delta]b| \[NotEqual] 0 or 2, contraction is impossible."]; 
             Return[0]]][[2]], 1]]; Return[yukawaCode`Private`result]]
 
Options[yukawaCode`Private`yukawaCubic] = {yukawaCode`Private`debug -> False, 
     yukawaCode`Private`showDiagram -> False}
 
Attributes[yukawaCode`Private`skipPrint] = {HoldAll}
 
yukawaCode`Private`skipPrint[yukawaCode`Private`expr_] := Null
 
yukawaCode`Private`cfBinReconstruct = CompiledFunction[{11, 12., 5468}, 
     {{_Integer, 1}}, {{2, 1, 0}, {2, 1, 2}}, {{0, {2, 0, 5}}, 
      {4, {2, 0, 1}}, {1, {2, 0, 0}}}, {2, 11, 0, 0, 3}, 
     {{6, 0, 2}, {6, 0, 6}, {6, 0, 4}, {42, "TotalAll", 2, 1, 0, 2, 0, 1, 2, 
       0, 3}, {6, 3, 7}, {6, 5, 9}, {35, 7, 2, 2}, {6, 5, 8}, {3, 2}, 
      {36, 9, 5, 2, 2}, {4, 8, 7, -1}, {6, 0, 4}, {26, 2, 3, 0}, {2, 0, 17}, 
      {6, 0, 6}, {38, 0, 0, 4, 0, 8}, {26, 6, 8, 1}, {2, 1, 9}, 
      {39, 2, 0, 2, 0, 4}, {6, 2, 7}, {12, 7, 0, 10}, {6, 10, 2}, {6, 6, 8}, 
      {12, 8, 0, 7}, {6, 7, 6}, {3, -10}, {6, 4, 9}, {12, 9, 0, 8}, 
      {6, 8, 4}, {3, -17}, {1}}, Function[{yukawaCode`Private`c}, 
      Module[{yukawaCode`Private`i = 1, yukawaCode`Private`j = 1, 
        yukawaCode`Private`k = 1, yukawaCode`Private`length = 
         Total[yukawaCode`Private`c], yukawaCode`Private`reconstruct}, 
       yukawaCode`Private`reconstruct = Table[0, 
          {yukawaCode`Private`length}]; For[yukawaCode`Private`k = 1, 
         yukawaCode`Private`i <= yukawaCode`Private`length, 
         yukawaCode`Private`k++, For[yukawaCode`Private`j = 1, 
          yukawaCode`Private`j <= yukawaCode`Private`c[[
            yukawaCode`Private`k]], yukawaCode`Private`j++, 
          yukawaCode`Private`reconstruct[[yukawaCode`Private`i]] = 
            yukawaCode`Private`k; yukawaCode`Private`i++]]; 
        yukawaCode`Private`reconstruct]], Evaluate, 
     LibraryFunction["/Users/liam/Library/Mathematica/ApplicationData/CCompil\
erDriver/BuildFolder/Macintosh-414-51642/compiledFunction9.dylib", 
      "compiledFunction9", {{Integer, 1, "Constant"}}, {Integer, 1}]]
 
yukawaCode`Private`yukawaCubicDiagram = 
    Function[{yukawaCode`Private`k1, yukawaCode`Private`s1, 
      yukawaCode`Private`k2, yukawaCode`Private`s2, yukawaCode`Private`k3, 
      yukawaCode`Private`s3}, 
     (-(yukawaCode`Private`s3/Sqrt[yukawaCode`Private`k1*2*
          yukawaCode`Private`k2*(yukawaCode`Private`k2 + 1)*2*
          yukawaCode`Private`k3*(yukawaCode`Private`k3 + 1)]))*
      (-(yukawaCode`Private`GY1[yukawaCode`Private`k3, yukawaCode`Private`k1, 
         yukawaCode`Private`k2, yukawaCode`Private`s1*yukawaCode`Private`s3, 
         yukawaCode`Private`s2*yukawaCode`Private`s3]/2))]
 
yukawaCode`Private`GY1 = CompiledFunction[{11, 12., 7516}, 
     {_Integer, _Integer, _Integer, _Integer, _Integer}, 
     {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, {2, 0, 3}, {2, 0, 4}, {2, 0, 9}}, 
     {{False, {1, 0, 2}}, {0, {2, 0, 5}}, {-2, {2, 0, 27}}, {2, {2, 0, 12}}, 
      {-1, {2, 0, 22}}, {1, {2, 0, 8}}}, {7, 39, 0, 0, 0}, 
     {{25, 5, 3, 0}, {2, 0, 4}, {25, 5, 4, 1}, {5, 1, 3}, {3, 2}, {5, 2, 3}, 
      {2, 3, 3}, {6, 5, 9}, {3, 235}, {25, 3, 5, 0}, {2, 0, 4}, 
      {25, 5, 4, 1}, {5, 1, 4}, {3, 2}, {5, 2, 4}, {2, 4, 70}, {26, 1, 0, 0}, 
      {2, 0, 7}, {18, 1, 6}, {12, 0, 6, 7}, {12, 8, 0, 6, 9}, {15, 7, 9, 7}, 
      {6, 7, 9}, {3, 2}, {6, 5, 9}, {26, 1, 2, 0}, {2, 0, 9}, {18, 1, 7}, 
      {12, 7, 2, 10}, {12, 8, 7, 2, 11}, {15, 12, 0, 2, 13}, 
      {12, 8, 0, 2, 13, 14}, {15, 10, 11, 14, 10}, {6, 10, 11}, {3, 2}, 
      {6, 5, 11}, {12, 8, 1, 10}, {26, 10, 2, 0}, {2, 0, 9}, {18, 2, 10}, 
      {12, 1, 10, 14}, {12, 8, 1, 10, 13}, {12, 8, 2, 15}, 
      {15, 0, 14, 13, 15, 16}, {18, 16, 14}, {6, 14, 16}, {3, 2}, {6, 5, 16}, 
      {12, 8, 2, 14}, {26, 1, 14, 0}, {2, 0, 9}, {18, 1, 14}, {12, 8, 0, 13}, 
      {12, 8, 14, 2, 15}, {12, 12, 14, 2, 17}, {15, 13, 2, 15, 17, 13}, 
      {18, 13, 15}, {6, 15, 13}, {3, 2}, {6, 5, 13}, {12, 0, 2, 15}, 
      {26, 1, 15, 0}, {2, 0, 9}, {18, 1, 15}, {12, 8, 2, 17}, 
      {12, 0, 15, 2, 18}, {12, 8, 0, 15, 2, 19}, {15, 17, 18, 19, 17}, 
      {18, 17, 18}, {6, 18, 17}, {3, 2}, {6, 5, 17}, {12, 8, 0, 2, 18}, 
      {26, 1, 18, 0}, {2, 0, 7}, {18, 1, 18}, {12, 8, 0, 18, 2, 19}, 
      {12, 12, 0, 18, 2, 20}, {15, 2, 19, 20, 21}, {6, 21, 19}, {3, 2}, 
      {6, 5, 19}, {12, 9, 11, 16, 13, 17, 19, 9}, {6, 9, 13}, {3, 158}, 
      {25, 5, 3, 0}, {2, 0, 4}, {25, 4, 5, 1}, {5, 1, 5}, {3, 2}, {5, 2, 5}, 
      {2, 5, 81}, {26, 2, 0, 0}, {2, 0, 8}, {18, 2, 11}, {12, 0, 11, 16}, 
      {12, 8, 0, 11, 13}, {12, 8, 2, 17}, {15, 16, 13, 17, 16}, {6, 16, 13}, 
      {3, 2}, {6, 5, 13}, {12, 8, 2, 16}, {26, 16, 0, 0}, {2, 0, 8}, 
      {18, 2, 16}, {12, 22, 0, 16, 19}, {12, 0, 16, 21}, {15, 19, 21, 2, 19}, 
      {18, 19, 21}, {6, 21, 19}, {3, 2}, {6, 5, 19}, {26, 2, 1, 0}, 
      {2, 0, 9}, {18, 2, 21}, {12, 8, 0, 20}, {12, 1, 21, 17}, 
      {12, 8, 1, 21, 23}, {12, 8, 2, 24}, {15, 20, 17, 23, 24, 20}, 
      {6, 20, 17}, {3, 2}, {6, 5, 17}, {12, 8, 2, 20}, {26, 20, 1, 0}, 
      {2, 0, 10}, {18, 2, 20}, {12, 22, 1, 20, 23}, {12, 1, 20, 24}, 
      {15, 12, 0, 2, 25}, {12, 0, 2, 25, 26}, {15, 23, 24, 26, 23}, 
      {18, 23, 24}, {6, 24, 23}, {3, 2}, {6, 5, 23}, {12, 12, 2, 24}, 
      {26, 24, 1, 0}, {2, 0, 7}, {18, 2, 24}, {12, 27, 1, 24, 25}, 
      {12, 22, 1, 24, 26}, {15, 0, 25, 26, 2, 28}, {6, 28, 25}, {3, 2}, 
      {6, 5, 25}, {12, 0, 1, 28}, {26, 2, 28, 0}, {2, 0, 8}, {18, 2, 28}, 
      {12, 22, 28, 26}, {12, 0, 1, 28, 29}, {12, 8, 0, 1, 28, 30}, 
      {15, 26, 29, 30, 26}, {6, 26, 29}, {3, 2}, {6, 5, 29}, {12, 0, 1, 26}, 
      {12, 8, 2, 30}, {26, 30, 26, 0}, {2, 0, 7}, {18, 2, 26}, 
      {12, 22, 0, 1, 26, 30}, {12, 0, 1, 26, 31}, {15, 30, 31, 2, 30}, 
      {6, 30, 31}, {3, 2}, {6, 5, 31}, {12, 13, 19, 17, 23, 25, 29, 31, 13}, 
      {6, 13, 19}, {3, 70}, {25, 3, 5, 0}, {2, 0, 4}, {25, 4, 5, 1}, 
      {5, 1, 6}, {3, 2}, {5, 2, 6}, {2, 6, 61}, {12, 8, 0, 19}, 
      {15, 0, 19, 17}, {18, 17, 19}, {26, 1, 0, 0}, {2, 0, 7}, {18, 1, 17}, 
      {12, 0, 17, 23}, {12, 8, 0, 17, 25}, {15, 23, 25, 23}, {6, 23, 25}, 
      {3, 2}, {6, 5, 25}, {26, 2, 0, 0}, {2, 0, 8}, {18, 2, 23}, 
      {12, 0, 23, 29}, {12, 8, 0, 23, 31}, {12, 8, 2, 30}, 
      {15, 29, 31, 30, 29}, {6, 29, 31}, {3, 2}, {6, 5, 31}, {12, 8, 2, 29}, 
      {26, 29, 0, 0}, {2, 0, 8}, {18, 2, 29}, {12, 22, 0, 29, 30}, 
      {12, 0, 29, 32}, {15, 30, 32, 2, 30}, {18, 30, 32}, {6, 32, 30}, 
      {3, 2}, {6, 5, 30}, {12, 1, 2, 32}, {26, 32, 0, 0}, {2, 0, 10}, 
      {18, 1, 32}, {18, 2, 33}, {12, 0, 32, 33, 34}, {12, 8, 0, 32, 33, 35}, 
      {12, 8, 2, 36}, {15, 34, 35, 36, 34}, {18, 34, 35}, {6, 35, 34}, 
      {3, 2}, {6, 5, 34}, {12, 8, 1, 2, 35}, {26, 35, 0, 0}, {2, 0, 8}, 
      {18, 1, 35}, {18, 2, 36}, {12, 22, 0, 35, 36, 37}, {12, 0, 35, 36, 38}, 
      {15, 37, 38, 2, 37}, {6, 37, 38}, {3, 2}, {6, 5, 38}, 
      {12, 19, 25, 31, 30, 34, 38, 19}, {6, 19, 25}, {3, 2}, {6, 5, 25}, 
      {6, 25, 19}, {6, 19, 13}, {6, 13, 9}, {1}}, 
     Function[{yukawaCode`Private`k1, yukawaCode`Private`k3, 
       yukawaCode`Private`k4, yukawaCode`Private`s3, yukawaCode`Private`s4}, 
      Block[{Compile`$4, Compile`$8, Compile`$14, Compile`$20, Compile`$25, 
        Compile`$29, Compile`$37, Compile`$42, Compile`$47, Compile`$52, 
        Compile`$58, Compile`$62, Compile`$67, Compile`$77, Compile`$81, 
        Compile`$86, Compile`$90, Compile`$91, Compile`$96, Compile`$97}, 
       Which[yukawaCode`Private`s3 > 0 && yukawaCode`Private`s4 > 0, 0, 
        yukawaCode`Private`s3 < 0 && yukawaCode`Private`s4 > 0, 
        If[yukawaCode`Private`k1 >= yukawaCode`Private`k3, 
          Compile`$4 = -yukawaCode`Private`k3; (yukawaCode`Private`k1 + 
             Compile`$4)*(1 + yukawaCode`Private`k1 + Compile`$4), 0] + 
         If[yukawaCode`Private`k4 >= yukawaCode`Private`k3, 
          Compile`$8 = -yukawaCode`Private`k3; 
           (Compile`$8 + yukawaCode`Private`k4)*(1 + Compile`$8 + 
             yukawaCode`Private`k4)*(1 + yukawaCode`Private`k1 + 
             yukawaCode`Private`k4 + 2*yukawaCode`Private`k1*
              yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k4 >= 
           1 + yukawaCode`Private`k3, Compile`$14 = -yukawaCode`Private`k4; 
           -(yukawaCode`Private`k1*(yukawaCode`Private`k3 + Compile`$14)*
             (1 + yukawaCode`Private`k3 + Compile`$14)*
             (1 + yukawaCode`Private`k4)), 0] + 
         If[1 + yukawaCode`Private`k4 >= yukawaCode`Private`k3, 
          Compile`$20 = -yukawaCode`Private`k3; -((1 + yukawaCode`Private`k1)*
             yukawaCode`Private`k4*(1 + Compile`$20 + yukawaCode`Private`k4)*
             (2 + Compile`$20 + yukawaCode`Private`k4)), 0] + 
         If[yukawaCode`Private`k1 + yukawaCode`Private`k4 >= 
           yukawaCode`Private`k3, Compile`$25 = -yukawaCode`Private`k3; 
           -((1 + yukawaCode`Private`k4)*(yukawaCode`Private`k1 + 
              Compile`$25 + yukawaCode`Private`k4)*
             (1 + yukawaCode`Private`k1 + Compile`$25 + 
              yukawaCode`Private`k4)), 0] + 
         If[1 + yukawaCode`Private`k1 + yukawaCode`Private`k4 >= 
           yukawaCode`Private`k3, Compile`$29 = -yukawaCode`Private`k3; 
           yukawaCode`Private`k4*(1 + yukawaCode`Private`k1 + Compile`$29 + 
             yukawaCode`Private`k4)*(2 + yukawaCode`Private`k1 + 
             Compile`$29 + yukawaCode`Private`k4), 0], 
        yukawaCode`Private`s3 > 0 && yukawaCode`Private`s4 < 0, 
        If[yukawaCode`Private`k1 >= yukawaCode`Private`k4, 
          Compile`$37 = -yukawaCode`Private`k4; (yukawaCode`Private`k1 + 
             Compile`$37)*(1 + yukawaCode`Private`k1 + Compile`$37)*
            (1 + yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k1 >= 
           1 + yukawaCode`Private`k4, Compile`$42 = -yukawaCode`Private`k4; 
           -((-1 + yukawaCode`Private`k1 + Compile`$42)*
             (yukawaCode`Private`k1 + Compile`$42)*yukawaCode`Private`k4), 
          0] + If[yukawaCode`Private`k3 >= yukawaCode`Private`k4, 
          Compile`$47 = -yukawaCode`Private`k4; (1 + yukawaCode`Private`k1)*
            (yukawaCode`Private`k3 + Compile`$47)*
            (1 + yukawaCode`Private`k3 + Compile`$47)*
            (1 + yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k3 >= 
           1 + yukawaCode`Private`k4, Compile`$52 = -yukawaCode`Private`k4; 
           -((-1 + yukawaCode`Private`k3 + Compile`$52)*
             (yukawaCode`Private`k3 + Compile`$52)*(yukawaCode`Private`k1 + 
              yukawaCode`Private`k4 + 2*yukawaCode`Private`k1*
               yukawaCode`Private`k4)), 0] + If[yukawaCode`Private`k3 >= 
           2 + yukawaCode`Private`k4, Compile`$58 = -yukawaCode`Private`k4; 
           yukawaCode`Private`k1*(-2 + yukawaCode`Private`k3 + Compile`$58)*
            (-1 + yukawaCode`Private`k3 + Compile`$58)*yukawaCode`Private`k4, 
          0] + If[yukawaCode`Private`k1 + yukawaCode`Private`k3 >= 
           yukawaCode`Private`k4, Compile`$62 = -yukawaCode`Private`k4; 
           (-1 + Compile`$62)*(yukawaCode`Private`k1 + 
             yukawaCode`Private`k3 + Compile`$62)*
            (1 + yukawaCode`Private`k1 + yukawaCode`Private`k3 + 
             Compile`$62), 0] + If[yukawaCode`Private`k1 + 
            yukawaCode`Private`k3 >= 1 + yukawaCode`Private`k4, 
          Compile`$67 = -yukawaCode`Private`k4; (-1 + yukawaCode`Private`k1 + 
             yukawaCode`Private`k3 + Compile`$67)*(yukawaCode`Private`k1 + 
             yukawaCode`Private`k3 + Compile`$67)*yukawaCode`Private`k4, 0], 
        yukawaCode`Private`s3 < 0 && yukawaCode`Private`s4 < 0, 
        -(yukawaCode`Private`k1*(1 + yukawaCode`Private`k1)) + 
         If[yukawaCode`Private`k1 >= yukawaCode`Private`k3, 
          Compile`$77 = -yukawaCode`Private`k3; (yukawaCode`Private`k1 + 
             Compile`$77)*(1 + yukawaCode`Private`k1 + Compile`$77), 0] + 
         If[yukawaCode`Private`k1 >= yukawaCode`Private`k4, 
          Compile`$81 = -yukawaCode`Private`k4; (yukawaCode`Private`k1 + 
             Compile`$81)*(1 + yukawaCode`Private`k1 + Compile`$81)*
            (1 + yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k1 >= 
           1 + yukawaCode`Private`k4, Compile`$86 = -yukawaCode`Private`k4; 
           -((-1 + yukawaCode`Private`k1 + Compile`$86)*
             (yukawaCode`Private`k1 + Compile`$86)*yukawaCode`Private`k4), 
          0] + If[yukawaCode`Private`k1 >= yukawaCode`Private`k3 + 
            yukawaCode`Private`k4, Compile`$90 = -yukawaCode`Private`k3; 
           Compile`$91 = -yukawaCode`Private`k4; 
           -((yukawaCode`Private`k1 + Compile`$90 + Compile`$91)*
             (1 + yukawaCode`Private`k1 + Compile`$90 + Compile`$91)*
             (1 + yukawaCode`Private`k4)), 0] + If[yukawaCode`Private`k1 >= 
           1 + yukawaCode`Private`k3 + yukawaCode`Private`k4, 
          Compile`$96 = -yukawaCode`Private`k3; Compile`$97 = 
            -yukawaCode`Private`k4; (-1 + yukawaCode`Private`k1 + 
             Compile`$96 + Compile`$97)*(yukawaCode`Private`k1 + 
             Compile`$96 + Compile`$97)*yukawaCode`Private`k4, 0], True, 
        0]]], Evaluate, LibraryFunction["/Users/liam/Library/Mathematica/Appl\
icationData/CCompilerDriver/BuildFolder/Macintosh-414-51642/compiledFunction7\
.dylib", "compiledFunction7", {{Integer, 0, "Constant"}, 
       {Integer, 0, "Constant"}, {Integer, 0, "Constant"}, 
       {Integer, 0, "Constant"}, {Integer, 0, "Constant"}}, Integer]]
 
Attributes[Compile`$4] = {Temporary}
 
Attributes[Compile`$8] = {Temporary}
 
Attributes[Compile`$14] = {Temporary}
 
Attributes[Compile`$20] = {Temporary}
 
Attributes[Compile`$25] = {Temporary}
 
Attributes[Compile`$29] = {Temporary}
 
Attributes[Compile`$37] = {Temporary}
 
Attributes[Compile`$42] = {Temporary}
 
Attributes[Compile`$47] = {Temporary}
 
Attributes[Compile`$52] = {Temporary}
 
Attributes[Compile`$58] = {Temporary}
 
Attributes[Compile`$62] = {Temporary}
 
Attributes[Compile`$67] = {Temporary}
 
Attributes[Compile`$77] = {Temporary}
 
Attributes[Compile`$81] = {Temporary}
 
Attributes[Compile`$86] = {Temporary}
 
Attributes[Compile`$90] = {Temporary}
 
Attributes[Compile`$91] = {Temporary}
 
Attributes[Compile`$96] = {Temporary}
 
Attributes[Compile`$97] = {Temporary}
 
yukawaCode`Private`yukawaQuartic[{yukawaCode`Private`a_, 
      yukawaCode`Private`b_}, {yukawaCode`Private`ap_, 
      yukawaCode`Private`bp_}, OptionsPattern[]] := 
    Block[{yukawaCode`Private`aDiff = yukawaCode`Private`a - 
        yukawaCode`Private`ap, yukawaCode`Private`bDiff = 
       yukawaCode`Private`b - yukawaCode`Private`bp, yukawaCode`Private`da, 
      yukawaCode`Private`db, yukawaCode`Private`aDiffAbs, 
      yukawaCode`Private`bDiffAbs, yukawaCode`Private`aBar, 
      yukawaCode`Private`apBar, yukawaCode`Private`bBar, 
      yukawaCode`Private`bpBar, yukawaCode`Private`flagScalarFree = False, 
      yukawaCode`Private`flagFermionFree = False, yukawaCode`Private`k1, 
      yukawaCode`Private`k2, yukawaCode`Private`k3, yukawaCode`Private`k4, 
      yukawaCode`Private`s1, yukawaCode`Private`s2, yukawaCode`Private`s3, 
      yukawaCode`Private`s4, yukawaCode`Private`k\[Phi], 
      yukawaCode`Private`k\[Phi]p, yukawaCode`Private`k\[Psi], 
      yukawaCode`Private`k\[Psi]p, yukawaCode`Private`symFactor, 
      yukawaCode`Private`perm, yukawaCode`Private`scalarPiece, 
      yukawaCode`Private`fermionPiece, yukawaCode`Private`myPrint = 
       If[OptionValue[yukawaCode`Private`debug], Print, 
        yukawaCode`Private`skipPrint], yukawaCode`Private`debug1 = 
       OptionValue[yukawaCode`Private`debug], 
      yukawaCode`Private`showDiagram1 = OptionValue[
        yukawaCode`Private`showDiagram]}, 
     yukawaCode`Private`da = Total[-yukawaCode`Private`aDiff]; 
      yukawaCode`Private`db = Total[-yukawaCode`Private`bDiff]; 
      yukawaCode`Private`myPrint[
       "\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(a\)]\)=", 
       yukawaCode`Private`da, 
       ",\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(b\)]\)=", 
       yukawaCode`Private`db*"."]; Which[yukawaCode`Private`da < 0 || 
        (yukawaCode`Private`da == 0 && yukawaCode`Private`db < 0), 
       yukawaCode`Private`myPrint[
         "\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(a\)]\)<0 or", 
         "(\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(a\)]\)=0 and", 
         "\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(b\)]\)<0), swapping", 
         "k\[LeftRightArrow]k'.\n"]; Return[yukawaCode`Private`yukawaQuartic[
          {yukawaCode`Private`ap, yukawaCode`Private`bp}, 
          {yukawaCode`Private`a, yukawaCode`Private`b}, 
          yukawaCode`Private`debug -> yukawaCode`Private`debug1, 
          yukawaCode`Private`showDiagram -> 
           yukawaCode`Private`showDiagram1]], yukawaCode`Private`da == 2 && 
        yukawaCode`Private`db == 2, yukawaCode`Private`myPrint[
         "Contraction (if possible) is zero mode."]; Return[0]]; 
      yukawaCode`Private`aDiffAbs = Total[Abs[yukawaCode`Private`aDiff]]; 
      yukawaCode`Private`bDiffAbs = Total[Abs[yukawaCode`Private`bDiff]]; 
      yukawaCode`Private`myPrint["|\[Delta]a|=", 
       yukawaCode`Private`aDiffAbs]; yukawaCode`Private`myPrint[
       "|\[Delta]b|=", yukawaCode`Private`aDiffAbs]; 
      yukawaCode`Private`flagScalarFree = 
       Which[yukawaCode`Private`aDiffAbs == 2, False, 
        yukawaCode`Private`aDiffAbs == 0, True, True, 
        yukawaCode`Private`myPrint[
          "|\[Delta]a| \[NotEqual] 0 or 2, contraction is impossible."]; 
         Return[0]]; yukawaCode`Private`flagFermionFree = 
       Which[yukawaCode`Private`bDiffAbs == 2, False, 
        yukawaCode`Private`bDiffAbs == 0, True, True, 
        yukawaCode`Private`myPrint[
          "|\[Delta]b| \[NotEqual] 0 or 2, contraction is impossible."]; 
         Return[0]]; yukawaCode`Private`scalarPiece = 
       Flatten[Reap[If[yukawaCode`Private`flagScalarFree, 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]a|=0, scalar part contracing same k from both \
sides."]; yukawaCode`Private`myPrint[
             "--- Iterating all possible scalar k\[Element]", 
             "\!\(\*OverscriptBox[\(k\),\(\[RightVector]\)]\)=", 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`a]]; 
            Block[{yukawaCode`Private`k = 1}, Scan[(If[#1 != 0, 
                 Sow[{2*#1, yukawaCode`Private`k, 1, yukawaCode`Private`k, 
                    -1}]; yukawaCode`Private`myPrint["    sending \
{\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\t\t\(3\)]]\)}=", DisplayForm[{2*#1, SuperscriptBox[
                      yukawaCode`Private`k, "+"], SuperscriptBox[
                      yukawaCode`Private`k, "-"]}]]; Sow[{2*#1, 
                    yukawaCode`Private`k, -1, yukawaCode`Private`k, 1}]; 
                  yukawaCode`Private`myPrint["    sending \
{\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\t\t\(3\)]]\)}=", DisplayForm[{2*#1, SuperscriptBox[
                      yukawaCode`Private`k, "-"], SuperscriptBox[
                      yukawaCode`Private`k, "+"]}]]; ]; 
                yukawaCode`Private`k++; ) & , yukawaCode`Private`a]]; 
            yukawaCode`Private`myPrint["--- Iteration finished"], 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]a|=2, scalar part contracing a pair of different k."]\
; yukawaCode`Private`aBar = Ramp[yukawaCode`Private`aDiff]; 
            yukawaCode`Private`apBar = Ramp[-yukawaCode`Private`aDiff]; 
            yukawaCode`Private`k\[Phi] = yukawaCode`Private`cfBinReconstruct[
              yukawaCode`Private`aBar]; yukawaCode`Private`k\[Phi]p = 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`apBar]; 
            yukawaCode`Private`myPrint["k=", yukawaCode`Private`k\[Phi], 
             ", k'=", yukawaCode`Private`k\[Phi]p]; 
            yukawaCode`Private`symFactor = 2*Times @@ Table[
                Sqrt[Binomial[yukawaCode`Private`a[[yukawaCode`Private`k]], 
                   yukawaCode`Private`aBar[[yukawaCode`Private`k]]]/
                  yukawaCode`Private`aBar[[yukawaCode`Private`k]]!], 
                {yukawaCode`Private`k, DeleteDuplicates[
                  yukawaCode`Private`k\[Phi]]}]*Times @@ Table[
                Sqrt[Binomial[yukawaCode`Private`ap[[yukawaCode`Private`kp]], 
                   yukawaCode`Private`apBar[[yukawaCode`Private`kp]]]/
                  yukawaCode`Private`apBar[[yukawaCode`Private`kp]]!], 
                {yukawaCode`Private`kp, DeleteDuplicates[
                  yukawaCode`Private`k\[Phi]p]}]; {yukawaCode`Private`k1, 
              yukawaCode`Private`k3} = Join[yukawaCode`Private`k\[Phi], 
              yukawaCode`Private`k\[Phi]p]; {yukawaCode`Private`s1, 
              yukawaCode`Private`s3} = Join[yukawaCode`Private`k\[Phi]*0 - 1, 
              yukawaCode`Private`k\[Phi]p*0 + 1]; 
            Sow[{yukawaCode`Private`symFactor, yukawaCode`Private`k1, 
              yukawaCode`Private`s1, yukawaCode`Private`k3, 
              yukawaCode`Private`s3}]; yukawaCode`Private`myPrint["    \
sending {\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\(3\)]]\)}=", DisplayForm[
              {yukawaCode`Private`symFactor, SuperscriptBox[
                yukawaCode`Private`k1, yukawaCode`Private`sgn[
                 yukawaCode`Private`s1]], SuperscriptBox[
                yukawaCode`Private`k3, yukawaCode`Private`sgn[
                 yukawaCode`Private`s3]]}]]; 
            Sow[{yukawaCode`Private`symFactor, yukawaCode`Private`k3, 
              yukawaCode`Private`s3, yukawaCode`Private`k1, 
              yukawaCode`Private`s1}]; yukawaCode`Private`myPrint["    \
sending {\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\(3\)]]\)}=", DisplayForm[
              {yukawaCode`Private`symFactor, SuperscriptBox[
                yukawaCode`Private`k3, yukawaCode`Private`sgn[
                 yukawaCode`Private`s3]], SuperscriptBox[
                yukawaCode`Private`k1, yukawaCode`Private`sgn[
                 yukawaCode`Private`s1]]}]]; ]][[2]], 1]; 
      yukawaCode`Private`fermionPiece = 
       Flatten[Reap[If[yukawaCode`Private`flagFermionFree, 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]b|=0, fermion part contracing same k from both \
sides."]; yukawaCode`Private`myPrint[
             "--- Iterating all possible fermion k\[Element]", 
             "\!\(\*OverscriptBox[\(k\),\(\[RightVector]\)]\)=", 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`b]]; 
            Block[{yukawaCode`Private`k = 1}, Scan[(If[#1 != 0, 
                 Sow[{1, yukawaCode`Private`k, 1, yukawaCode`Private`k, -1}]; 
                  yukawaCode`Private`myPrint["    sending \
{(-1\!\(\*SuperscriptBox[\()\),\n\t\t\t\(\[Sigma]\)]\),\!\(\*SubsuperscriptBo\
x[\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\t\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\t\t\(4\)]]\)}=", DisplayForm[{1, SuperscriptBox[
                      yukawaCode`Private`k, "-"], SuperscriptBox[
                      yukawaCode`Private`k, "+"]}]]; ]; 
                yukawaCode`Private`k++; ) & , yukawaCode`Private`b]]; 
            yukawaCode`Private`myPrint["--- Iteration finished"], 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]b|=2, fermion part contracing a pair of different \
k."]; yukawaCode`Private`bBar = Ramp[yukawaCode`Private`bDiff]; 
            yukawaCode`Private`bpBar = Ramp[-yukawaCode`Private`bDiff]; 
            yukawaCode`Private`k\[Psi] = yukawaCode`Private`cfBinReconstruct[
              yukawaCode`Private`bBar]; yukawaCode`Private`k\[Psi]p = 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`bpBar]; 
            yukawaCode`Private`myPrint["k=", yukawaCode`Private`k\[Psi], 
             ", k'=", yukawaCode`Private`k\[Psi]p]; yukawaCode`Private`perm = 
             Times @@ Table[(-1)^Total[Take[yukawaCode`Private`b, 
                   yukawaCode`Private`k]], {yukawaCode`Private`k, 
                 yukawaCode`Private`k\[Psi]}]*Times @@ Table[
                (-1)^Total[Take[yukawaCode`Private`bp, 
                   yukawaCode`Private`kp]], {yukawaCode`Private`kp, 
                 yukawaCode`Private`k\[Psi]p}]*If[Length[
                 yukawaCode`Private`k\[Psi]] == 1, 1, -1]; 
            {yukawaCode`Private`k4, yukawaCode`Private`k2} = 
             Join[Reverse[yukawaCode`Private`k\[Psi]], 
              yukawaCode`Private`k\[Psi]p]; {yukawaCode`Private`s4, 
              yukawaCode`Private`s2} = Join[yukawaCode`Private`k\[Psi]*0 - 1, 
              yukawaCode`Private`k\[Psi]p*0 + 1]; yukawaCode`Private`myPrint[
             "    sending \
{(-1\!\(\*SuperscriptBox[\()\),\n\t\t\(\[Sigma]\)]\),\!\(\*SubsuperscriptBox[\
\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\t\(4\)]]\)}=", DisplayForm[{yukawaCode`Private`perm, 
               SuperscriptBox[yukawaCode`Private`k2, yukawaCode`Private`sgn[
                 yukawaCode`Private`s2]], SuperscriptBox[
                yukawaCode`Private`k4, yukawaCode`Private`sgn[
                 yukawaCode`Private`s4]]}]]; Sow[{yukawaCode`Private`perm, 
              yukawaCode`Private`k2, yukawaCode`Private`s2, 
              yukawaCode`Private`k4, yukawaCode`Private`s4}]; ]][[2]], 1]; 
      yukawaCode`Private`myPrint["\n--- Assembling Diagrams"]; 
      yukawaCode`Private`myPrint["    DIAGRAM \[Congruent] \
(-1\!\(\*SuperscriptBox[\()\),\n\t\(\[Sigma]\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(S\), \(~\)], \(sym\)]\) \[Times] \n", 
       "      ", DisplayForm[FractionBox["-\!\(\*SubscriptBox[\(s\),\n\t\(1\)\
]\)\!\(\*SubscriptBox[\(s\), \
\(2\)]\)\!\(\*SubscriptBox[\(s\),\n\t\(3\)]\)\!\(\*SubscriptBox[\(s\), \
\(4\)]\)", SqrtBox["\!\(\*SubscriptBox[\(k\),\n\t\(1\)]\)\!\(\*SubscriptBox[\
\(k\), \
\(3\)]\)2\!\(\*SubscriptBox[\(k\),\n\t\(2\)]\)(\!\(\*SubscriptBox[\(k\), \
\(2\)]\)+1)2\!\(\*SubscriptBox[\(k\),\n\t\(4\)]\)(\!\(\*SubscriptBox[\(k\), \
\(4\)]\)+1)"]]], DisplayForm[SubscriptBox[yukawaCode`Private`g, 
         Row[{yukawaCode`Private`\[Phi], yukawaCode`Private`\[Psi], 
           FractionBox[1, "\[PartialD]"], yukawaCode`Private`\[Phi], 
           yukawaCode`Private`\[Psi]}]]], "(\!\(\*SubsuperscriptBox[\(k\), \
\(1\), SubscriptBox[\(s\),\n\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\(3\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\(4\)]]\))"]; 
      Return[Total[Outer[yukawaCode`Private`yukawaQuarticDiagram[
          yukawaCode`Private`debug1, yukawaCode`Private`showDiagram1], 
         yukawaCode`Private`fermionPiece, yukawaCode`Private`scalarPiece, 1], 
        2]]]
 
Options[yukawaCode`Private`yukawaQuartic] = 
    {yukawaCode`Private`debug -> False, yukawaCode`Private`showDiagram -> 
      False}
 
yukawaCode`Private`sgn[-1] = "-"
 
yukawaCode`Private`sgn[1] = "+"
 
yukawaCode`Private`yukawaQuarticDiagram[yukawaCode`Private`debug_, 
      yukawaCode`Private`showDiagram_][{yukawaCode`Private`perm_, 
      yukawaCode`Private`k2_, yukawaCode`Private`s2_, yukawaCode`Private`k4_, 
      yukawaCode`Private`s4_}, {yukawaCode`Private`symFactor_, 
      yukawaCode`Private`k1_, yukawaCode`Private`s1_, yukawaCode`Private`k3_, 
      yukawaCode`Private`s3_}] := 
    Block[{yukawaCode`Private`diagramResult = yukawaCode`Private`symFactor*
        yukawaCode`Private`perm*(-Sqrt[yukawaCode`Private`k1*
            yukawaCode`Private`k3*2*yukawaCode`Private`k2*
            (yukawaCode`Private`k2 + 1)*2*yukawaCode`Private`k4*
            (yukawaCode`Private`k4 + 1)]^(-1))*yukawaCode`Private`GY[
         yukawaCode`Private`k1, yukawaCode`Private`k2, yukawaCode`Private`k3, 
         yukawaCode`Private`k4, yukawaCode`Private`s1, yukawaCode`Private`s2, 
         yukawaCode`Private`s3, yukawaCode`Private`s4], 
      yukawaCode`Private`myPrint = If[yukawaCode`Private`debug, Print, 
        yukawaCode`Private`skipPrint], yukawaCode`Private`myDiagram = 
       If[yukawaCode`Private`showDiagram, yukawaCode`Private`diagram, 
        yukawaCode`Private`skipDiagram]}, 
     yukawaCode`Private`myPrint["\n    \
\[FilledSquare]{\!\(\*SubscriptBox[OverscriptBox[\(S\),\n\t\(~\)], \
\(sym\)]\),(-1\!\(\*SuperscriptBox[\()\),\n\t\(\[Sigma]\)]\),\!\(\*Subsupersc\
riptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\(3\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\(4\)]]\)} = ", DisplayForm[
        {yukawaCode`Private`symFactor, yukawaCode`Private`perm, 
         SuperscriptBox[yukawaCode`Private`k1, yukawaCode`Private`sgn[
           yukawaCode`Private`s1]], SuperscriptBox[yukawaCode`Private`k2, 
          yukawaCode`Private`sgn[yukawaCode`Private`s2]], 
         SuperscriptBox[yukawaCode`Private`k3, yukawaCode`Private`sgn[
           yukawaCode`Private`s3]], SuperscriptBox[yukawaCode`Private`k4, 
          yukawaCode`Private`sgn[yukawaCode`Private`s4]]}]]; 
      yukawaCode`Private`myPrint["      ", yukawaCode`Private`myDiagram[
         yukawaCode`Private`s1, yukawaCode`Private`s2, yukawaCode`Private`s3, 
         yukawaCode`Private`s4][yukawaCode`Private`k1, yukawaCode`Private`k2, 
        yukawaCode`Private`k3, yukawaCode`Private`k4], " = ", 
       yukawaCode`Private`diagramResult]; yukawaCode`Private`diagramResult]
 
yukawaCode`Private`GY[yukawaCode`Private`k1_, yukawaCode`Private`k2_, 
     yukawaCode`Private`k3_, yukawaCode`Private`k4_, yukawaCode`Private`s1_, 
     yukawaCode`Private`s2_, yukawaCode`Private`s3_, 
     yukawaCode`Private`s4_] := 
    Block[{yukawaCode`Private`k = yukawaCode`Private`s1*yukawaCode`Private`s2*
         yukawaCode`Private`k1 + yukawaCode`Private`k2, 
      yukawaCode`Private`sk, yukawaCode`Private`l}, 
     -(If[yukawaCode`Private`k >= 0, yukawaCode`Private`sk = 1; 
         yukawaCode`Private`l = yukawaCode`Private`k, 
        yukawaCode`Private`sk = -1; yukawaCode`Private`l = 
          -yukawaCode`Private`k - 1]; yukawaCode`Private`s1*
         yukawaCode`Private`k1*(yukawaCode`Private`GY2[yukawaCode`Private`l, 
           yukawaCode`Private`k3, yukawaCode`Private`k4, 
           yukawaCode`Private`sk*yukawaCode`Private`s2*yukawaCode`Private`s3, 
           yukawaCode`Private`sk*yukawaCode`Private`s2*
            yukawaCode`Private`s4] - yukawaCode`Private`GY2[
           yukawaCode`Private`k1, yukawaCode`Private`k3, 
           yukawaCode`Private`k4, yukawaCode`Private`s1*
            yukawaCode`Private`s3, yukawaCode`Private`s1*
            yukawaCode`Private`s4]) - yukawaCode`Private`s1*(1/2)*
         yukawaCode`Private`GY1[yukawaCode`Private`k1, yukawaCode`Private`k3, 
          yukawaCode`Private`k4, yukawaCode`Private`s1*yukawaCode`Private`s3, 
          yukawaCode`Private`s1*yukawaCode`Private`s4] - 
        yukawaCode`Private`s2*(1/2)*yukawaCode`Private`GY1[
          yukawaCode`Private`k2, yukawaCode`Private`k3, 
          yukawaCode`Private`k4, yukawaCode`Private`s2*yukawaCode`Private`s3, 
          yukawaCode`Private`s2*yukawaCode`Private`s4] + 
        yukawaCode`Private`sk*yukawaCode`Private`s2*(1/2)*
         yukawaCode`Private`GY1[yukawaCode`Private`l, yukawaCode`Private`k3, 
          yukawaCode`Private`k4, yukawaCode`Private`sk*yukawaCode`Private`s2*
           yukawaCode`Private`s3, yukawaCode`Private`sk*yukawaCode`Private`s2*
           yukawaCode`Private`s4] + 
        If[yukawaCode`Private`s1*yukawaCode`Private`s2 < 0 && 
          yukawaCode`Private`k1 <= yukawaCode`Private`k2, 
         yukawaCode`Private`k1*yukawaCode`Private`GYLog[
           yukawaCode`Private`k3, yukawaCode`Private`k4, 
           yukawaCode`Private`s3, yukawaCode`Private`s4], 0])]
 
yukawaCode`Private`GY2 = Function[{yukawaCode`Private`k, 
      yukawaCode`Private`k3, yukawaCode`Private`k4, yukawaCode`Private`s3, 
      yukawaCode`Private`s4}, Which[yukawaCode`Private`s3 > 0 && 
       yukawaCode`Private`s4 > 0, 0, yukawaCode`Private`s3 < 0 && 
       yukawaCode`Private`s4 > 0, yukawaCode`Private`k - 
       yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`k3] + 
       If[yukawaCode`Private`k4 <= yukawaCode`Private`k3, 
        -((1 + yukawaCode`Private`k4)*(yukawaCode`Private`k - 
           yukawaCode`Private`hsum[yukawaCode`Private`k, 
            yukawaCode`Private`k3 - yukawaCode`Private`k4])), 0] + 
       If[1 + yukawaCode`Private`k4 <= yukawaCode`Private`k3, 
        yukawaCode`Private`k4*(yukawaCode`Private`k - yukawaCode`Private`hsum[
           yukawaCode`Private`k, -1 + yukawaCode`Private`k3 - 
            yukawaCode`Private`k4]), 0], yukawaCode`Private`s3 > 0 && 
       yukawaCode`Private`s4 < 0, yukawaCode`Private`k - 
       (1 + yukawaCode`Private`k4)*yukawaCode`Private`hsum[
         yukawaCode`Private`k, yukawaCode`Private`k4] + 
       yukawaCode`Private`k4*yukawaCode`Private`hsum[yukawaCode`Private`k, 
         1 + yukawaCode`Private`k4] + If[yukawaCode`Private`k3 <= 
         yukawaCode`Private`k4, -((1 + yukawaCode`Private`k4)*
          (yukawaCode`Private`k - yukawaCode`Private`hsum[
            yukawaCode`Private`k, -yukawaCode`Private`k3 + 
             yukawaCode`Private`k4])), 0] + If[yukawaCode`Private`k3 <= 
         1 + yukawaCode`Private`k4, yukawaCode`Private`k4*
         (yukawaCode`Private`k - yukawaCode`Private`hsum[
           yukawaCode`Private`k, 1 - yukawaCode`Private`k3 + 
            yukawaCode`Private`k4]), 0], yukawaCode`Private`s3 < 0 && 
       yukawaCode`Private`s4 < 0, yukawaCode`Private`k - 
       yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`k3] - 
       (1 + yukawaCode`Private`k4)*yukawaCode`Private`hsum[
         yukawaCode`Private`k, yukawaCode`Private`k4] + 
       yukawaCode`Private`k4*yukawaCode`Private`hsum[yukawaCode`Private`k, 
         1 + yukawaCode`Private`k4] + (1 + yukawaCode`Private`k4)*
        yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`k3 + 
          yukawaCode`Private`k4] - yukawaCode`Private`k4*
        yukawaCode`Private`hsum[yukawaCode`Private`k, 
         1 + yukawaCode`Private`k3 + yukawaCode`Private`k4], True, 0]]
 
yukawaCode`Private`hsum[yukawaCode`Private`k_, yukawaCode`Private`p_] := 
    yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`p] = 
     If[yukawaCode`Private`k > yukawaCode`Private`p, 
      yukawaCode`Private`k - yukawaCode`Private`p - yukawaCode`Private`p*
        (yukawaCode`Private`myHarmonic[yukawaCode`Private`k] - 
         yukawaCode`Private`myHarmonic[yukawaCode`Private`p]), 0]
 
yukawaCode`Private`myHarmonic[yukawaCode`Private`p_] := 
    yukawaCode`Private`myHarmonic[yukawaCode`Private`p] = 
     HarmonicNumber[Abs[yukawaCode`Private`p]]
 
yukawaCode`Private`GYLog = Function[{yukawaCode`Private`k3, 
      yukawaCode`Private`k4, yukawaCode`Private`s3, yukawaCode`Private`s4}, 
     Which[yukawaCode`Private`s3 == -1 && yukawaCode`Private`s4 == -1, 
      yukawaCode`Private`k3*(-yukawaCode`Private`myHarmonic[
          yukawaCode`Private`k3] + yukawaCode`Private`myHarmonic[
         yukawaCode`Private`k3 + yukawaCode`Private`k4]), 
      yukawaCode`Private`s3 == -1 && yukawaCode`Private`s4 == 1, 
      -(yukawaCode`Private`k3*yukawaCode`Private`myHarmonic[
          yukawaCode`Private`k3]) + (yukawaCode`Private`k3 - 
         yukawaCode`Private`k4)*(1 + yukawaCode`Private`k4)*
        yukawaCode`Private`myHarmonic[yukawaCode`Private`k3 - 
          yukawaCode`Private`k4] + yukawaCode`Private`k4*
        (-1 + (1 - yukawaCode`Private`k3 + yukawaCode`Private`k4)*
          yukawaCode`Private`myHarmonic[1 - yukawaCode`Private`k3 + 
            yukawaCode`Private`k4]), yukawaCode`Private`s3 == 1 && 
       yukawaCode`Private`s4 == -1, yukawaCode`Private`k4 + 
       yukawaCode`Private`k3*yukawaCode`Private`myHarmonic[
         yukawaCode`Private`k3] + (1 + yukawaCode`Private`k4)*
        (-yukawaCode`Private`k3 + yukawaCode`Private`k4)*
        yukawaCode`Private`myHarmonic[yukawaCode`Private`k3 - 
          yukawaCode`Private`k4] + (-1 + yukawaCode`Private`k3 - 
         yukawaCode`Private`k4)*yukawaCode`Private`k4*
        yukawaCode`Private`myHarmonic[1 - yukawaCode`Private`k3 + 
          yukawaCode`Private`k4], yukawaCode`Private`s3 == 1 && 
       yukawaCode`Private`s4 == 1, yukawaCode`Private`k3*
       (yukawaCode`Private`myHarmonic[yukawaCode`Private`k3] - 
        yukawaCode`Private`myHarmonic[yukawaCode`Private`k3 + 
          yukawaCode`Private`k4]), True, Print["exception"]; Abort[]; ]]
 
yukawaCode`Private`diagram[1, -1, 1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection, 
      yukawaCode`Private`order, yukawaCode`Private`lblSty = 
       Function[yukawaCode`Private`txt, Style[yukawaCode`Private`txt, 
         FontFamily -> "Times", FontSize -> 14]], yukawaCode`Private`k3p, 
      yukawaCode`Private`k1p, yukawaCode`Private`kk3p, 
      yukawaCode`Private`kk1p}, 
     If[yukawaCode`Private`k3 < yukawaCode`Private`k1 || 
        (yukawaCode`Private`k3 == yukawaCode`Private`k1 && 
         yukawaCode`Private`toggleIdenticalK1K3Swap02), 
       yukawaCode`Private`k3p = yukawaCode`Private`k1; 
        yukawaCode`Private`k1p = yukawaCode`Private`k3; 
        yukawaCode`Private`kk3p = 1; yukawaCode`Private`kk1p = 3; 
        yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; , yukawaCode`Private`k3p = 
         yukawaCode`Private`k3; yukawaCode`Private`k1p = 
         yukawaCode`Private`k1; yukawaCode`Private`kk3p = 3; 
        yukawaCode`Private`kk1p = 1; yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; ]; If[yukawaCode`Private`k3 == 
        yukawaCode`Private`k1, yukawaCode`Private`toggleIdenticalK1K3Swap02 = 
         !yukawaCode`Private`toggleIdenticalK1K3Swap02]; 
      yukawaCode`Private`order = Ordering[Ordering[VertexList[
          yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{1, 1}, {0, 1/2}, {1, 1/2}, {1, 0}, {1/2, 2/3}, {1/2, 1/3}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 1, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k1p, "+"]}]]], 
           {After, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                 yukawaCode`Private`k, 2, "-"], "=", SuperscriptBox[
                 yukawaCode`Private`k2, "-"]}]]]], {Before, Above}], 
         3 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 3, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k3p, "+"]}]]], 
           {After, Below}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[-1, 1, -1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection, 
      yukawaCode`Private`order, yukawaCode`Private`lblSty = 
       Function[yukawaCode`Private`txt, Style[yukawaCode`Private`txt, 
         FontFamily -> "Times", FontSize -> 14]], yukawaCode`Private`k3p, 
      yukawaCode`Private`k1p, yukawaCode`Private`kk3p, 
      yukawaCode`Private`kk1p}, 
     If[yukawaCode`Private`k3 < yukawaCode`Private`k1 || 
        (yukawaCode`Private`k3 == yukawaCode`Private`k1 && 
         yukawaCode`Private`toggleIdenticalK1K3Swap20), 
       yukawaCode`Private`k3p = yukawaCode`Private`k1; 
        yukawaCode`Private`k1p = yukawaCode`Private`k3; 
        yukawaCode`Private`kk3p = 1; yukawaCode`Private`kk1p = 3; 
        yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; , yukawaCode`Private`k3p = 
         yukawaCode`Private`k3; yukawaCode`Private`k1p = 
         yukawaCode`Private`k1; yukawaCode`Private`kk3p = 3; 
        yukawaCode`Private`kk1p = 1; yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; ]; If[yukawaCode`Private`k3 == 
        yukawaCode`Private`k1, yukawaCode`Private`toggleIdenticalK1K3Swap20 = 
         !yukawaCode`Private`toggleIdenticalK1K3Swap20]; 
      yukawaCode`Private`order = Ordering[Ordering[VertexList[
          yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{0, 1}, {1, 1}, {0, 0}, {1, 0}, {1/2, 4/5}, {1/2, 1/5}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 
                 yukawaCode`Private`kk1p, "-"], "=", SuperscriptBox[
                 yukawaCode`Private`k1p, "-"]}]]]], {Before, Above}], 
         2 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 2, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k2, "+"]}]]], 
           {After, Above}], 3 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                 yukawaCode`Private`k, yukawaCode`Private`kk3p, "-"], "=", 
                SuperscriptBox[yukawaCode`Private`k3p, "-"]}]]]], 
           {Before, Below}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[-1, 1, 1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection = 
       {Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, yukawaCode`Private`order, 
      yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, yukawaCode`Private`order = 
       Ordering[Ordering[VertexList[yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{0, 1/2}, {1, 1/2}, {1, 1}, {1, 0}, {1/2, 2/3}, {1/2, 1/3}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 1, "-"], 
                "=", SuperscriptBox[yukawaCode`Private`k1, "-"]}]]]], 
           {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 2, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k2, "+"]}]]], 
           {After, Below}], 3 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 3, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k3, "+"]}]]], 
           {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[1, 1, -1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection = 
       {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, yukawaCode`Private`order, 
      yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, yukawaCode`Private`order = 
       Ordering[Ordering[VertexList[yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{0, 1/2}, {1, 1/2}, {1, 1}, {1, 0}, {1/2, 2/3}, {1/2, 1/3}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 3, "-"], 
                "=", SuperscriptBox[yukawaCode`Private`k3, "-"]}]]]], 
           {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 2, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k2, "+"]}]]], 
           {After, Below}], 3 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 1, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k1, "+"]}]]], 
           {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[-1, -1, 1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := 
    Block[{yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, 
     Graph[{Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
        Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
       Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
        Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
       Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
        Thickness[0.06]]}, VertexCoordinates -> {{0, 1}, {1/5, 1/2}, {0, 0}, 
        {1, 1}, {4/5, 1/2}, {1, 0}}, VertexStyle -> Black, 
      VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
        yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
      EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
       {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
            RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 1, "-"], 
               "=", SuperscriptBox[yukawaCode`Private`k1, "-"]}]]]], 
          {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
           DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                yukawaCode`Private`k, 2, "-"], "=", SuperscriptBox[
                yukawaCode`Private`k2, "-"]}]]]], {Before, Below}], 
        3 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
            RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 3, "+"], "=", 
              SuperscriptBox[yukawaCode`Private`k3, "+"]}]]], 
          {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
           DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
               "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
          {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[1, -1, -1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection = 
       {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, yukawaCode`Private`order, 
      yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, yukawaCode`Private`order = 
       Ordering[Ordering[VertexList[{Style[UndirectedEdge[1, 
             yukawaCode`Private`v2], Thickness[0.02], Dashed], 
           UndirectedEdge[2, yukawaCode`Private`v1], 
           Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
            Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
           Style[UndirectedEdge[yukawaCode`Private`v1, 
             yukawaCode`Private`v2], Thickness[0.06]]}]]]; 
      Graph[{Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, VertexCoordinates -> 
        {{0, 1}, {0, 0}, {1, 1}, {1, 0}, {1/5, 1/2}, {4/5, 1/2}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 3, "-"], 
                "=", SuperscriptBox[yukawaCode`Private`k3, "-"]}]]]], 
           {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                 yukawaCode`Private`k, 2, "-"], "=", SuperscriptBox[
                 yukawaCode`Private`k2, "-"]}]]]], {Before, Below}], 
         3 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 1, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k1, "+"]}]]], 
           {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`toggleIdenticalK1K3Swap02 = False
 
yukawaCode`Private`toggleIdenticalK1K3Swap20 = False
 
Attributes[yukawaCode`Private`skipDiagram] = {HoldAll}
 
yukawaCode`Private`skipDiagram[yukawaCode`Private`expr1__] := 
    yukawaCode`Private`skipDiagram2
 
Attributes[yukawaCode`Private`skipDiagram2] = {HoldAll}
 
yukawaCode`Private`skipDiagram2[yukawaCode`Private`expr2__] := "DIAGRAM"
 
yukawaCode`Private`stateCount[yukawaCode`Private`lstOfLevels_] := 
    Total[(Length[#states] & ) /@ yukawaCode`Private`lstOfLevels]
matYukawaCubic = Table[If[yukawaCode`Private`nBL == yukawaCode`Private`nBR + 
         1 && MatchQ[yukawaCode`Private`nFL - yukawaCode`Private`nFR, 
        -2 | 0 | 2], Catch[ArrayFlatten[Outer[yukawaCode`Private`primBlock[
          yukawaCode`Private`yukawaCubic, -1, yukawaCode`Private`nFR - 
           yukawaCode`Private`nFL], (If[Length[#1] == 0, Throw[{}], #1] & )[
          Insert[PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{}, 
             Insert[0, 0, 2], {{}}], PadRight[{1, 1}, Insert[0, 0, 2], 
             {{}}]][[yukawaCode`Private`nBL + 1,yukawaCode`Private`nFL + 
            1]]], (If[Length[#1] == 0, Throw[{}], #1] & )[
          Insert[PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{}, 
             Insert[0, 0, 2], {{}}], PadRight[{1, 1}, Insert[0, 0, 2], 
             {{}}]][[yukawaCode`Private`nBR + 1,yukawaCode`Private`nFR + 
            1]]], 1]]], SparseArray[{}, {yukawaCode`Private`stateCount[
         Insert[PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{}, 
            Insert[0, 0, 2], {{}}], PadRight[{1, 1}, Insert[0, 0, 2], {{}}]][[
          yukawaCode`Private`nBL + 1,yukawaCode`Private`nFL + 1]]], 
        yukawaCode`Private`stateCount[Insert[PadRight[{}, Insert[0, 0, 2], 
            {{}}], PadRight[{}, Insert[0, 0, 2], {{}}], PadRight[{1, 1}, 
            Insert[0, 0, 2], {{}}]][[yukawaCode`Private`nBR + 1,
          yukawaCode`Private`nFR + 1]]]}]], {yukawaCode`Private`nBL, 0, 2}, 
     {yukawaCode`Private`nBR, 0, 2}, {yukawaCode`Private`nFL, 0, 
      -1 + {3}[[2]]}, {yukawaCode`Private`nFR, 0, -1 + {3}[[2]]}]
 
yukawaCode`Private`primBlock[yukawaCode`Private`operator_, 
     yukawaCode`Private`dnB_, yukawaCode`Private`dnF_] = 
    Function[{yukawaCode`Private`level1, yukawaCode`Private`level2}, 
     With[{yukawaCode`Private`lL = yukawaCode`Private`level1["l"], 
       yukawaCode`Private`lR = yukawaCode`Private`level2["l"], 
       yukawaCode`Private`degBL = yukawaCode`Private`level1["degB"], 
       yukawaCode`Private`degBR = yukawaCode`Private`level2["degB"], 
       yukawaCode`Private`degFL = yukawaCode`Private`level1["degF"], 
       yukawaCode`Private`degFR = yukawaCode`Private`level2["degF"], 
       yukawaCode`Private`nB = yukawaCode`Private`level1["nB"], 
       yukawaCode`Private`nF = yukawaCode`Private`level1["nF"]}, 
      SparseArray[Outer[Total[Table[Flatten[#1[[yukawaCode`Private`kL + 
                1]]] . yukawaCode`Private`monomialBlock[
              yukawaCode`Private`operator, {yukawaCode`Private`nB, 
               yukawaCode`Private`nB + yukawaCode`Private`dnB}, 
              {yukawaCode`Private`nF, yukawaCode`Private`nF + 
                yukawaCode`Private`dnF}, {yukawaCode`Private`degBL + 
                yukawaCode`Private`kL, yukawaCode`Private`degBR + 
                yukawaCode`Private`kR}, {yukawaCode`Private`degFL + 
                yukawaCode`Private`lL - yukawaCode`Private`kL, 
               yukawaCode`Private`degFR + yukawaCode`Private`lR - 
                yukawaCode`Private`kR}] . Flatten[#2[[yukawaCode`Private`kR + 
                1]]], {yukawaCode`Private`kL, 0, yukawaCode`Private`lL}, 
            {yukawaCode`Private`kR, 0, yukawaCode`Private`lR}], 2] & , 
         yukawaCode`Private`level1["states"], yukawaCode`Private`level2[
          "states"], 1]]*yukawaCode`Private`factor[yukawaCode`Private`nB + 
         (3*yukawaCode`Private`nF)/2 + yukawaCode`Private`degBL + 
         yukawaCode`Private`degFL + yukawaCode`Private`lL, 
        (yukawaCode`Private`nB + yukawaCode`Private`dnB) + 
         (3*(yukawaCode`Private`nF + yukawaCode`Private`dnF))/2 + 
         yukawaCode`Private`degBR + yukawaCode`Private`degFR + 
         yukawaCode`Private`lR]*yukawaCode`Private`factorM[
        yukawaCode`Private`operator]]]
 
yukawaCode`Private`monomialBlock[yukawaCode`Private`operator_, 
     {yukawaCode`Private`nBL_, yukawaCode`Private`nBR_}, 
     {yukawaCode`Private`nFL_, yukawaCode`Private`nFR_}, 
     {yukawaCode`Private`degB1_, yukawaCode`Private`degB2_}, 
     {yukawaCode`Private`degF1_, yukawaCode`Private`degF2_}] := 
    yukawaCode`Private`monomialBlock[yukawaCode`Private`operator, 
      {yukawaCode`Private`nBL, yukawaCode`Private`nBR}, 
      {yukawaCode`Private`nFL, yukawaCode`Private`nFR}, 
      {yukawaCode`Private`degB1, yukawaCode`Private`degB2}, 
      {yukawaCode`Private`degF1, yukawaCode`Private`degF2}] = 
     With[{yukawaCode`Private`a1List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degB1, yukawaCode`Private`degB2] + 
            1] & ) /@ yukawaCode`Private`monomialsBoson[
          yukawaCode`Private`nBL, yukawaCode`Private`degB1], 
       yukawaCode`Private`a2List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degB1, yukawaCode`Private`degB2] + 
            1] & ) /@ yukawaCode`Private`monomialsBoson[
          yukawaCode`Private`nBR, yukawaCode`Private`degB2], 
       yukawaCode`Private`b1List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degF1, yukawaCode`Private`degF2] + 
            1] & ) /@ yukawaCode`Private`monomialsFermion[
          yukawaCode`Private`nFL, yukawaCode`Private`degF1], 
       yukawaCode`Private`b2List = (yukawaCode`Private`cfBinCount[#1, 
           Max[yukawaCode`Private`degF1, yukawaCode`Private`degF2] + 
            1] & ) /@ yukawaCode`Private`monomialsFermion[
          yukawaCode`Private`nFR, yukawaCode`Private`degF2]}, 
      SparseArray[Outer[yukawaCode`Private`operator, 
        Flatten[Outer[List, yukawaCode`Private`a1List, 
          yukawaCode`Private`b1List, 1], 1], 
        Flatten[Outer[List, yukawaCode`Private`a2List, 
          yukawaCode`Private`b2List, 1], 1], 1]]]
 
yukawaCode`Private`cfBinCount = CompiledFunction[{11, 12., 5468}, 
     {{_Integer, 1}, _Integer}, {{2, 1, 0}, {2, 0, 0}, {2, 1, 2}}, 
     {{0, {2, 0, 4}}, {1, {2, 0, 2}}}, {0, 10, 0, 0, 3}, 
     {{6, 0, 6}, {6, 4, 3}, {35, 6, 2, 2}, {6, 4, 5}, {3, 2}, 
      {36, 3, 4, 2, 2}, {4, 5, 6, -1}, {33, 0, 6}, {6, 4, 8}, {3, 6}, 
      {37, 0, 8, 2, 1}, {38, 2, 0, 1, 0, 9}, {37, 0, 8, 2, 1}, {12, 9, 2, 7}, 
      {39, 2, 0, 1, 0, 7}, {4, 8, 6, -5}, {1}}, 
     Function[{yukawaCode`Private`k, yukawaCode`Private`max}, 
      Module[{yukawaCode`Private`lst}, yukawaCode`Private`lst = 
         Table[0, {yukawaCode`Private`max}]; 
        Scan[yukawaCode`Private`lst[[#1]]++ & , yukawaCode`Private`k]; 
        yukawaCode`Private`lst]], Evaluate, LibraryFunction["/Users/yuan/Libr\
ary/Mathematica/ApplicationData/CCompilerDriver/BuildFolder/Yuans-MacBook-Pro\
-76608/compiledFunction46.dylib", "compiledFunction46", 
      {{Integer, 1, "Constant"}, {Integer, 0, "Constant"}}, {Integer, 1}]]
 
yukawaCode`Private`monomialsBoson[yukawaCode`Private`n_, 
     yukawaCode`Private`deg_] := yukawaCode`Private`monomialsBoson[
      yukawaCode`Private`n, yukawaCode`Private`deg] = 
     IntegerPartitions[yukawaCode`Private`deg + yukawaCode`Private`n, 
      {yukawaCode`Private`n}]
 
yukawaCode`Private`monomialsFermion[yukawaCode`Private`n_, 
     yukawaCode`Private`deg_] := yukawaCode`Private`monomialsFermion[
      yukawaCode`Private`n, yukawaCode`Private`deg] = 
     (#1 + Reverse[Range[yukawaCode`Private`n] - 1] & ) /@ 
      yukawaCode`Private`monomialsBoson[yukawaCode`Private`n, 
       yukawaCode`Private`deg + yukawaCode`Private`n - 
        (yukawaCode`Private`n*(yukawaCode`Private`n + 1))/2]
 
yukawaCode`Private`factor[yukawaCode`Private`\[CapitalDelta]_, 
     yukawaCode`Private`\[CapitalDelta]p_] := 
    yukawaCode`Private`factor[yukawaCode`Private`\[CapitalDelta], 
      yukawaCode`Private`\[CapitalDelta]p] = 
     (Sqrt[Gamma[2*yukawaCode`Private`\[CapitalDelta]]*
         Gamma[2*yukawaCode`Private`\[CapitalDelta]p]]*
       (-1)^(yukawaCode`Private`\[CapitalDelta] - 
         yukawaCode`Private`\[CapitalDelta]p))/
      Gamma[yukawaCode`Private`\[CapitalDelta] + 
        yukawaCode`Private`\[CapitalDelta]p - 1]
 
yukawaCode`Private`factorM[yukawaCode`Private`yukawaCubic] = -1/(2*Sqrt[Pi])
 
yukawaCode`Private`factorM[yukawaCode`Private`yukawaQuartic] = 1/(4*Pi)
 
yukawaCode`Private`yukawaCubic[{yukawaCode`Private`a_, 
      yukawaCode`Private`b_}, {yukawaCode`Private`ap_, 
      yukawaCode`Private`bp_}, OptionsPattern[]] := 
    Block[{yukawaCode`Private`aDiff = yukawaCode`Private`a - 
        yukawaCode`Private`ap, yukawaCode`Private`bDiff = 
       yukawaCode`Private`b - yukawaCode`Private`bp, yukawaCode`Private`da, 
      yukawaCode`Private`db, yukawaCode`Private`aDiffAbs, 
      yukawaCode`Private`bDiffAbs, yukawaCode`Private`aBar, 
      yukawaCode`Private`apBar, yukawaCode`Private`bBar, 
      yukawaCode`Private`bpBar, yukawaCode`Private`k1, yukawaCode`Private`k2, 
      yukawaCode`Private`k3, yukawaCode`Private`s1, yukawaCode`Private`s2, 
      yukawaCode`Private`s3, yukawaCode`Private`k\[Psi], 
      yukawaCode`Private`k\[Psi]p, yukawaCode`Private`symFactor, 
      yukawaCode`Private`perm, yukawaCode`Private`result, 
      yukawaCode`Private`myPrint = If[OptionValue[yukawaCode`Private`debug], 
        Print, yukawaCode`Private`skipPrint], yukawaCode`Private`debug1 = 
       OptionValue[yukawaCode`Private`debug], 
      yukawaCode`Private`showDiagram1 = OptionValue[
        yukawaCode`Private`showDiagram]}, 
     yukawaCode`Private`da = Total[-yukawaCode`Private`aDiff]; 
      yukawaCode`Private`db = Total[-yukawaCode`Private`bDiff]; 
      Which[yukawaCode`Private`da == 1, Return[yukawaCode`Private`yukawaCubic[
         {yukawaCode`Private`ap, yukawaCode`Private`bp}, 
         {yukawaCode`Private`a, yukawaCode`Private`b}, 
         yukawaCode`Private`debug -> yukawaCode`Private`debug1, 
         yukawaCode`Private`showDiagram -> yukawaCode`Private`showDiagram1]], 
       yukawaCode`Private`da == -1 && (yukawaCode`Private`db == 0 || 
         yukawaCode`Private`db == 2 || yukawaCode`Private`db == -2), 
       yukawaCode`Private`myPrint["change of particle number is legal"]; , 
       True, yukawaCode`Private`myPrint[
         "change of particle number is illegal"]; Return[0]]; 
      yukawaCode`Private`aBar = Ramp[yukawaCode`Private`aDiff]; 
      If[Total[yukawaCode`Private`aBar] != 1, Return[0]]; 
      yukawaCode`Private`k1 = First[yukawaCode`Private`cfBinReconstruct[
         yukawaCode`Private`aBar]]; yukawaCode`Private`s1 = -1; 
      yukawaCode`Private`symFactor = Sqrt[yukawaCode`Private`a[[
         yukawaCode`Private`k1]]]; yukawaCode`Private`bDiffAbs = 
       Total[Abs[yukawaCode`Private`bDiff]]; yukawaCode`Private`result = 
       Total[Flatten[Reap[Which[yukawaCode`Private`bDiffAbs == 0, 
            yukawaCode`Private`myPrint["\n|\[Delta]b|=0, fermion part \
contracing same k from both sides."]; yukawaCode`Private`myPrint[
              "--- Iterating all possible fermion k\[Element]", 
              "\!\(\*OverscriptBox[\(k\),\(\[RightVector]\)]\)=", 
              yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`b]]; 
             Block[{yukawaCode`Private`k = 1}, Scan[(If[#1 != 0, 
                  Sow[yukawaCode`Private`symFactor*
                     yukawaCode`Private`yukawaCubicDiagram[
                      yukawaCode`Private`k1, yukawaCode`Private`s1, 
                      yukawaCode`Private`k, -1, yukawaCode`Private`k, 1]]; 
                   Sow[-(yukawaCode`Private`symFactor*
                      yukawaCode`Private`yukawaCubicDiagram[
                       yukawaCode`Private`k1, yukawaCode`Private`s1, 
                       yukawaCode`Private`k, 1, yukawaCode`Private`k, 
                       -1])]; ]; yukawaCode`Private`k++; ) & , 
               yukawaCode`Private`b]]; yukawaCode`Private`myPrint[
              "--- Iteration finished"], yukawaCode`Private`bDiffAbs == 2, 
            yukawaCode`Private`myPrint[
              "\n|\[Delta]b|=2, fermion part contracing a pair of different \
k."]; yukawaCode`Private`bBar = Ramp[yukawaCode`Private`bDiff]; 
             yukawaCode`Private`bpBar = Ramp[-yukawaCode`Private`bDiff]; 
             yukawaCode`Private`k\[Psi] = yukawaCode`Private`cfBinReconstruct[
               yukawaCode`Private`bBar]; yukawaCode`Private`k\[Psi]p = 
              yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`bpBar]; 
             yukawaCode`Private`myPrint["k=", yukawaCode`Private`k\[Psi], 
              ", k'=", yukawaCode`Private`k\[Psi]p]; 
             yukawaCode`Private`perm = Times @@ Table[(-1)^Total[
                   Take[yukawaCode`Private`b, yukawaCode`Private`k]], 
                 {yukawaCode`Private`k, yukawaCode`Private`k\[Psi]}]*Times @@ 
                Table[(-1)^Total[Take[yukawaCode`Private`bp, 
                    yukawaCode`Private`kp]], {yukawaCode`Private`kp, 
                  yukawaCode`Private`k\[Psi]p}]*If[Length[
                  yukawaCode`Private`k\[Psi]] == 1, 1, -1]; 
             {yukawaCode`Private`k2, yukawaCode`Private`k3} = 
              Join[Reverse[yukawaCode`Private`k\[Psi]], 
               yukawaCode`Private`k\[Psi]p]; {yukawaCode`Private`s2, 
               yukawaCode`Private`s3} = Join[yukawaCode`Private`k\[Psi]*0 - 
                1, yukawaCode`Private`k\[Psi]p*0 + 1]; 
             Sow[yukawaCode`Private`symFactor*yukawaCode`Private`perm*
               yukawaCode`Private`yukawaCubicDiagram[yukawaCode`Private`k1, 
                yukawaCode`Private`s1, yukawaCode`Private`k2, 
                yukawaCode`Private`s2, yukawaCode`Private`k3, 
                yukawaCode`Private`s3]]; Sow[yukawaCode`Private`symFactor*(
                -yukawaCode`Private`perm)*
               yukawaCode`Private`yukawaCubicDiagram[yukawaCode`Private`k1, 
                yukawaCode`Private`s1, yukawaCode`Private`k3, 
                yukawaCode`Private`s3, yukawaCode`Private`k2, 
                yukawaCode`Private`s2]]; , True, yukawaCode`Private`myPrint[
              "|\[Delta]b| \[NotEqual] 0 or 2, contraction is impossible."]; 
             Return[0]]][[2]], 1]]; Return[yukawaCode`Private`result]]
 
Options[yukawaCode`Private`yukawaCubic] = {yukawaCode`Private`debug -> False, 
     yukawaCode`Private`showDiagram -> False}
 
Attributes[yukawaCode`Private`skipPrint] = {HoldAll}
 
yukawaCode`Private`skipPrint[yukawaCode`Private`expr_] := Null
 
yukawaCode`Private`cfBinReconstruct = CompiledFunction[{11, 12., 5468}, 
     {{_Integer, 1}}, {{2, 1, 0}, {2, 1, 2}}, {{0, {2, 0, 5}}, 
      {4, {2, 0, 1}}, {1, {2, 0, 0}}}, {2, 11, 0, 0, 3}, 
     {{6, 0, 2}, {6, 0, 6}, {6, 0, 4}, {42, "TotalAll", 2, 1, 0, 2, 0, 1, 2, 
       0, 3}, {6, 3, 7}, {6, 5, 9}, {35, 7, 2, 2}, {6, 5, 8}, {3, 2}, 
      {36, 9, 5, 2, 2}, {4, 8, 7, -1}, {6, 0, 4}, {26, 2, 3, 0}, {2, 0, 17}, 
      {6, 0, 6}, {38, 0, 0, 4, 0, 8}, {26, 6, 8, 1}, {2, 1, 9}, 
      {39, 2, 0, 2, 0, 4}, {6, 2, 7}, {12, 7, 0, 10}, {6, 10, 2}, {6, 6, 8}, 
      {12, 8, 0, 7}, {6, 7, 6}, {3, -10}, {6, 4, 9}, {12, 9, 0, 8}, 
      {6, 8, 4}, {3, -17}, {1}}, Function[{yukawaCode`Private`c}, 
      Module[{yukawaCode`Private`i = 1, yukawaCode`Private`j = 1, 
        yukawaCode`Private`k = 1, yukawaCode`Private`length = 
         Total[yukawaCode`Private`c], yukawaCode`Private`reconstruct}, 
       yukawaCode`Private`reconstruct = Table[0, 
          {yukawaCode`Private`length}]; For[yukawaCode`Private`k = 1, 
         yukawaCode`Private`i <= yukawaCode`Private`length, 
         yukawaCode`Private`k++, For[yukawaCode`Private`j = 1, 
          yukawaCode`Private`j <= yukawaCode`Private`c[[
            yukawaCode`Private`k]], yukawaCode`Private`j++, 
          yukawaCode`Private`reconstruct[[yukawaCode`Private`i]] = 
            yukawaCode`Private`k; yukawaCode`Private`i++]]; 
        yukawaCode`Private`reconstruct]], Evaluate, 
     LibraryFunction["/Users/yuan/Library/Mathematica/ApplicationData/CCompil\
erDriver/BuildFolder/Yuans-MacBook-Pro-76608/compiledFunction47.dylib", 
      "compiledFunction47", {{Integer, 1, "Constant"}}, {Integer, 1}]]
 
yukawaCode`Private`yukawaCubicDiagram = 
    Function[{yukawaCode`Private`k1, yukawaCode`Private`s1, 
      yukawaCode`Private`k2, yukawaCode`Private`s2, yukawaCode`Private`k3, 
      yukawaCode`Private`s3}, 
     (-(yukawaCode`Private`s3/Sqrt[yukawaCode`Private`k1*2*
          yukawaCode`Private`k2*(yukawaCode`Private`k2 + 1)*2*
          yukawaCode`Private`k3*(yukawaCode`Private`k3 + 1)]))*
      (-(yukawaCode`Private`GY1[yukawaCode`Private`k3, yukawaCode`Private`k1, 
         yukawaCode`Private`k2, yukawaCode`Private`s1*yukawaCode`Private`s3, 
         yukawaCode`Private`s2*yukawaCode`Private`s3]/2))]
 
yukawaCode`Private`GY1 = CompiledFunction[{11, 12., 7516}, 
     {_Integer, _Integer, _Integer, _Integer, _Integer}, 
     {{2, 0, 0}, {2, 0, 1}, {2, 0, 2}, {2, 0, 3}, {2, 0, 4}, {2, 0, 9}}, 
     {{False, {1, 0, 2}}, {0, {2, 0, 5}}, {-2, {2, 0, 27}}, {2, {2, 0, 12}}, 
      {-1, {2, 0, 22}}, {1, {2, 0, 8}}}, {7, 39, 0, 0, 0}, 
     {{25, 5, 3, 0}, {2, 0, 4}, {25, 5, 4, 1}, {5, 1, 3}, {3, 2}, {5, 2, 3}, 
      {2, 3, 3}, {6, 5, 9}, {3, 235}, {25, 3, 5, 0}, {2, 0, 4}, 
      {25, 5, 4, 1}, {5, 1, 4}, {3, 2}, {5, 2, 4}, {2, 4, 70}, {26, 1, 0, 0}, 
      {2, 0, 7}, {18, 1, 6}, {12, 0, 6, 7}, {12, 8, 0, 6, 9}, {15, 7, 9, 7}, 
      {6, 7, 9}, {3, 2}, {6, 5, 9}, {26, 1, 2, 0}, {2, 0, 9}, {18, 1, 7}, 
      {12, 7, 2, 10}, {12, 8, 7, 2, 11}, {15, 12, 0, 2, 13}, 
      {12, 8, 0, 2, 13, 14}, {15, 10, 11, 14, 10}, {6, 10, 11}, {3, 2}, 
      {6, 5, 11}, {12, 8, 1, 10}, {26, 10, 2, 0}, {2, 0, 9}, {18, 2, 10}, 
      {12, 1, 10, 14}, {12, 8, 1, 10, 13}, {12, 8, 2, 15}, 
      {15, 0, 14, 13, 15, 16}, {18, 16, 14}, {6, 14, 16}, {3, 2}, {6, 5, 16}, 
      {12, 8, 2, 14}, {26, 1, 14, 0}, {2, 0, 9}, {18, 1, 14}, {12, 8, 0, 13}, 
      {12, 8, 14, 2, 15}, {12, 12, 14, 2, 17}, {15, 13, 2, 15, 17, 13}, 
      {18, 13, 15}, {6, 15, 13}, {3, 2}, {6, 5, 13}, {12, 0, 2, 15}, 
      {26, 1, 15, 0}, {2, 0, 9}, {18, 1, 15}, {12, 8, 2, 17}, 
      {12, 0, 15, 2, 18}, {12, 8, 0, 15, 2, 19}, {15, 17, 18, 19, 17}, 
      {18, 17, 18}, {6, 18, 17}, {3, 2}, {6, 5, 17}, {12, 8, 0, 2, 18}, 
      {26, 1, 18, 0}, {2, 0, 7}, {18, 1, 18}, {12, 8, 0, 18, 2, 19}, 
      {12, 12, 0, 18, 2, 20}, {15, 2, 19, 20, 21}, {6, 21, 19}, {3, 2}, 
      {6, 5, 19}, {12, 9, 11, 16, 13, 17, 19, 9}, {6, 9, 13}, {3, 158}, 
      {25, 5, 3, 0}, {2, 0, 4}, {25, 4, 5, 1}, {5, 1, 5}, {3, 2}, {5, 2, 5}, 
      {2, 5, 81}, {26, 2, 0, 0}, {2, 0, 8}, {18, 2, 11}, {12, 0, 11, 16}, 
      {12, 8, 0, 11, 13}, {12, 8, 2, 17}, {15, 16, 13, 17, 16}, {6, 16, 13}, 
      {3, 2}, {6, 5, 13}, {12, 8, 2, 16}, {26, 16, 0, 0}, {2, 0, 8}, 
      {18, 2, 16}, {12, 22, 0, 16, 19}, {12, 0, 16, 21}, {15, 19, 21, 2, 19}, 
      {18, 19, 21}, {6, 21, 19}, {3, 2}, {6, 5, 19}, {26, 2, 1, 0}, 
      {2, 0, 9}, {18, 2, 21}, {12, 8, 0, 20}, {12, 1, 21, 17}, 
      {12, 8, 1, 21, 23}, {12, 8, 2, 24}, {15, 20, 17, 23, 24, 20}, 
      {6, 20, 17}, {3, 2}, {6, 5, 17}, {12, 8, 2, 20}, {26, 20, 1, 0}, 
      {2, 0, 10}, {18, 2, 20}, {12, 22, 1, 20, 23}, {12, 1, 20, 24}, 
      {15, 12, 0, 2, 25}, {12, 0, 2, 25, 26}, {15, 23, 24, 26, 23}, 
      {18, 23, 24}, {6, 24, 23}, {3, 2}, {6, 5, 23}, {12, 12, 2, 24}, 
      {26, 24, 1, 0}, {2, 0, 7}, {18, 2, 24}, {12, 27, 1, 24, 25}, 
      {12, 22, 1, 24, 26}, {15, 0, 25, 26, 2, 28}, {6, 28, 25}, {3, 2}, 
      {6, 5, 25}, {12, 0, 1, 28}, {26, 2, 28, 0}, {2, 0, 8}, {18, 2, 28}, 
      {12, 22, 28, 26}, {12, 0, 1, 28, 29}, {12, 8, 0, 1, 28, 30}, 
      {15, 26, 29, 30, 26}, {6, 26, 29}, {3, 2}, {6, 5, 29}, {12, 0, 1, 26}, 
      {12, 8, 2, 30}, {26, 30, 26, 0}, {2, 0, 7}, {18, 2, 26}, 
      {12, 22, 0, 1, 26, 30}, {12, 0, 1, 26, 31}, {15, 30, 31, 2, 30}, 
      {6, 30, 31}, {3, 2}, {6, 5, 31}, {12, 13, 19, 17, 23, 25, 29, 31, 13}, 
      {6, 13, 19}, {3, 70}, {25, 3, 5, 0}, {2, 0, 4}, {25, 4, 5, 1}, 
      {5, 1, 6}, {3, 2}, {5, 2, 6}, {2, 6, 61}, {12, 8, 0, 19}, 
      {15, 0, 19, 17}, {18, 17, 19}, {26, 1, 0, 0}, {2, 0, 7}, {18, 1, 17}, 
      {12, 0, 17, 23}, {12, 8, 0, 17, 25}, {15, 23, 25, 23}, {6, 23, 25}, 
      {3, 2}, {6, 5, 25}, {26, 2, 0, 0}, {2, 0, 8}, {18, 2, 23}, 
      {12, 0, 23, 29}, {12, 8, 0, 23, 31}, {12, 8, 2, 30}, 
      {15, 29, 31, 30, 29}, {6, 29, 31}, {3, 2}, {6, 5, 31}, {12, 8, 2, 29}, 
      {26, 29, 0, 0}, {2, 0, 8}, {18, 2, 29}, {12, 22, 0, 29, 30}, 
      {12, 0, 29, 32}, {15, 30, 32, 2, 30}, {18, 30, 32}, {6, 32, 30}, 
      {3, 2}, {6, 5, 30}, {12, 1, 2, 32}, {26, 32, 0, 0}, {2, 0, 10}, 
      {18, 1, 32}, {18, 2, 33}, {12, 0, 32, 33, 34}, {12, 8, 0, 32, 33, 35}, 
      {12, 8, 2, 36}, {15, 34, 35, 36, 34}, {18, 34, 35}, {6, 35, 34}, 
      {3, 2}, {6, 5, 34}, {12, 8, 1, 2, 35}, {26, 35, 0, 0}, {2, 0, 8}, 
      {18, 1, 35}, {18, 2, 36}, {12, 22, 0, 35, 36, 37}, {12, 0, 35, 36, 38}, 
      {15, 37, 38, 2, 37}, {6, 37, 38}, {3, 2}, {6, 5, 38}, 
      {12, 19, 25, 31, 30, 34, 38, 19}, {6, 19, 25}, {3, 2}, {6, 5, 25}, 
      {6, 25, 19}, {6, 19, 13}, {6, 13, 9}, {1}}, 
     Function[{yukawaCode`Private`k1, yukawaCode`Private`k3, 
       yukawaCode`Private`k4, yukawaCode`Private`s3, yukawaCode`Private`s4}, 
      Block[{Compile`$6, Compile`$11, Compile`$17, Compile`$23, Compile`$28, 
        Compile`$33, Compile`$41, Compile`$46, Compile`$51, Compile`$56, 
        Compile`$62, Compile`$66, Compile`$71, Compile`$81, Compile`$85, 
        Compile`$90, Compile`$94, Compile`$95, Compile`$102, Compile`$104}, 
       Which[yukawaCode`Private`s3 > 0 && yukawaCode`Private`s4 > 0, 0, 
        yukawaCode`Private`s3 < 0 && yukawaCode`Private`s4 > 0, 
        If[yukawaCode`Private`k1 >= yukawaCode`Private`k3, 
          Compile`$6 = -yukawaCode`Private`k3; (yukawaCode`Private`k1 + 
             Compile`$6)*(1 + yukawaCode`Private`k1 + Compile`$6), 0] + 
         If[yukawaCode`Private`k4 >= yukawaCode`Private`k3, 
          Compile`$11 = -yukawaCode`Private`k3; 
           (Compile`$11 + yukawaCode`Private`k4)*(1 + Compile`$11 + 
             yukawaCode`Private`k4)*(1 + yukawaCode`Private`k1 + 
             yukawaCode`Private`k4 + 2*yukawaCode`Private`k1*
              yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k4 >= 
           1 + yukawaCode`Private`k3, Compile`$17 = -yukawaCode`Private`k4; 
           -(yukawaCode`Private`k1*(yukawaCode`Private`k3 + Compile`$17)*
             (1 + yukawaCode`Private`k3 + Compile`$17)*
             (1 + yukawaCode`Private`k4)), 0] + 
         If[1 + yukawaCode`Private`k4 >= yukawaCode`Private`k3, 
          Compile`$23 = -yukawaCode`Private`k3; -((1 + yukawaCode`Private`k1)*
             yukawaCode`Private`k4*(1 + Compile`$23 + yukawaCode`Private`k4)*
             (2 + Compile`$23 + yukawaCode`Private`k4)), 0] + 
         If[yukawaCode`Private`k1 + yukawaCode`Private`k4 >= 
           yukawaCode`Private`k3, Compile`$28 = -yukawaCode`Private`k3; 
           -((1 + yukawaCode`Private`k4)*(yukawaCode`Private`k1 + 
              Compile`$28 + yukawaCode`Private`k4)*
             (1 + yukawaCode`Private`k1 + Compile`$28 + 
              yukawaCode`Private`k4)), 0] + 
         If[1 + yukawaCode`Private`k1 + yukawaCode`Private`k4 >= 
           yukawaCode`Private`k3, Compile`$33 = -yukawaCode`Private`k3; 
           yukawaCode`Private`k4*(1 + yukawaCode`Private`k1 + Compile`$33 + 
             yukawaCode`Private`k4)*(2 + yukawaCode`Private`k1 + 
             Compile`$33 + yukawaCode`Private`k4), 0], 
        yukawaCode`Private`s3 > 0 && yukawaCode`Private`s4 < 0, 
        If[yukawaCode`Private`k1 >= yukawaCode`Private`k4, 
          Compile`$41 = -yukawaCode`Private`k4; (yukawaCode`Private`k1 + 
             Compile`$41)*(1 + yukawaCode`Private`k1 + Compile`$41)*
            (1 + yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k1 >= 
           1 + yukawaCode`Private`k4, Compile`$46 = -yukawaCode`Private`k4; 
           -((-1 + yukawaCode`Private`k1 + Compile`$46)*
             (yukawaCode`Private`k1 + Compile`$46)*yukawaCode`Private`k4), 
          0] + If[yukawaCode`Private`k3 >= yukawaCode`Private`k4, 
          Compile`$51 = -yukawaCode`Private`k4; (1 + yukawaCode`Private`k1)*
            (yukawaCode`Private`k3 + Compile`$51)*
            (1 + yukawaCode`Private`k3 + Compile`$51)*
            (1 + yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k3 >= 
           1 + yukawaCode`Private`k4, Compile`$56 = -yukawaCode`Private`k4; 
           -((-1 + yukawaCode`Private`k3 + Compile`$56)*
             (yukawaCode`Private`k3 + Compile`$56)*(yukawaCode`Private`k1 + 
              yukawaCode`Private`k4 + 2*yukawaCode`Private`k1*
               yukawaCode`Private`k4)), 0] + If[yukawaCode`Private`k3 >= 
           2 + yukawaCode`Private`k4, Compile`$62 = -yukawaCode`Private`k4; 
           yukawaCode`Private`k1*(-2 + yukawaCode`Private`k3 + Compile`$62)*
            (-1 + yukawaCode`Private`k3 + Compile`$62)*yukawaCode`Private`k4, 
          0] + If[yukawaCode`Private`k1 + yukawaCode`Private`k3 >= 
           yukawaCode`Private`k4, Compile`$66 = -yukawaCode`Private`k4; 
           (-1 + Compile`$66)*(yukawaCode`Private`k1 + 
             yukawaCode`Private`k3 + Compile`$66)*
            (1 + yukawaCode`Private`k1 + yukawaCode`Private`k3 + 
             Compile`$66), 0] + If[yukawaCode`Private`k1 + 
            yukawaCode`Private`k3 >= 1 + yukawaCode`Private`k4, 
          Compile`$71 = -yukawaCode`Private`k4; (-1 + yukawaCode`Private`k1 + 
             yukawaCode`Private`k3 + Compile`$71)*(yukawaCode`Private`k1 + 
             yukawaCode`Private`k3 + Compile`$71)*yukawaCode`Private`k4, 0], 
        yukawaCode`Private`s3 < 0 && yukawaCode`Private`s4 < 0, 
        -(yukawaCode`Private`k1*(1 + yukawaCode`Private`k1)) + 
         If[yukawaCode`Private`k1 >= yukawaCode`Private`k3, 
          Compile`$81 = -yukawaCode`Private`k3; (yukawaCode`Private`k1 + 
             Compile`$81)*(1 + yukawaCode`Private`k1 + Compile`$81), 0] + 
         If[yukawaCode`Private`k1 >= yukawaCode`Private`k4, 
          Compile`$85 = -yukawaCode`Private`k4; (yukawaCode`Private`k1 + 
             Compile`$85)*(1 + yukawaCode`Private`k1 + Compile`$85)*
            (1 + yukawaCode`Private`k4), 0] + If[yukawaCode`Private`k1 >= 
           1 + yukawaCode`Private`k4, Compile`$90 = -yukawaCode`Private`k4; 
           -((-1 + yukawaCode`Private`k1 + Compile`$90)*
             (yukawaCode`Private`k1 + Compile`$90)*yukawaCode`Private`k4), 
          0] + If[yukawaCode`Private`k1 >= yukawaCode`Private`k3 + 
            yukawaCode`Private`k4, Compile`$94 = -yukawaCode`Private`k3; 
           Compile`$95 = -yukawaCode`Private`k4; 
           -((yukawaCode`Private`k1 + Compile`$94 + Compile`$95)*
             (1 + yukawaCode`Private`k1 + Compile`$94 + Compile`$95)*
             (1 + yukawaCode`Private`k4)), 0] + If[yukawaCode`Private`k1 >= 
           1 + yukawaCode`Private`k3 + yukawaCode`Private`k4, 
          Compile`$102 = -yukawaCode`Private`k3; Compile`$104 = 
            -yukawaCode`Private`k4; (-1 + yukawaCode`Private`k1 + 
             Compile`$102 + Compile`$104)*(yukawaCode`Private`k1 + 
             Compile`$102 + Compile`$104)*yukawaCode`Private`k4, 0], True, 
        0]]], Evaluate, LibraryFunction["/Users/yuan/Library/Mathematica/Appl\
icationData/CCompilerDriver/BuildFolder/Yuans-MacBook-Pro-76608/compiledFunct\
ion45.dylib", "compiledFunction45", {{Integer, 0, "Constant"}, 
       {Integer, 0, "Constant"}, {Integer, 0, "Constant"}, 
       {Integer, 0, "Constant"}, {Integer, 0, "Constant"}}, Integer]]
 
Attributes[Compile`$6] = {Temporary}
 
Attributes[Compile`$11] = {Temporary}
 
Attributes[Compile`$17] = {Temporary}
 
Attributes[Compile`$23] = {Temporary}
 
Attributes[Compile`$28] = {Temporary}
 
Attributes[Compile`$33] = {Temporary}
 
Attributes[Compile`$41] = {Temporary}
 
Attributes[Compile`$46] = {Temporary}
 
Attributes[Compile`$51] = {Temporary}
 
Attributes[Compile`$56] = {Temporary}
 
Attributes[Compile`$62] = {Temporary}
 
Attributes[Compile`$66] = {Temporary}
 
Attributes[Compile`$71] = {Temporary}
 
Attributes[Compile`$81] = {Temporary}
 
Attributes[Compile`$85] = {Temporary}
 
Attributes[Compile`$90] = {Temporary}
 
Attributes[Compile`$94] = {Temporary}
 
Attributes[Compile`$95] = {Temporary}
 
Attributes[Compile`$102] = {Temporary}
 
Attributes[Compile`$104] = {Temporary}
 
yukawaCode`Private`yukawaQuartic[{yukawaCode`Private`a_, 
      yukawaCode`Private`b_}, {yukawaCode`Private`ap_, 
      yukawaCode`Private`bp_}, OptionsPattern[]] := 
    Block[{yukawaCode`Private`aDiff = yukawaCode`Private`a - 
        yukawaCode`Private`ap, yukawaCode`Private`bDiff = 
       yukawaCode`Private`b - yukawaCode`Private`bp, yukawaCode`Private`da, 
      yukawaCode`Private`db, yukawaCode`Private`aDiffAbs, 
      yukawaCode`Private`bDiffAbs, yukawaCode`Private`aBar, 
      yukawaCode`Private`apBar, yukawaCode`Private`bBar, 
      yukawaCode`Private`bpBar, yukawaCode`Private`flagScalarFree = False, 
      yukawaCode`Private`flagFermionFree = False, yukawaCode`Private`k1, 
      yukawaCode`Private`k2, yukawaCode`Private`k3, yukawaCode`Private`k4, 
      yukawaCode`Private`s1, yukawaCode`Private`s2, yukawaCode`Private`s3, 
      yukawaCode`Private`s4, yukawaCode`Private`k\[Phi], 
      yukawaCode`Private`k\[Phi]p, yukawaCode`Private`k\[Psi], 
      yukawaCode`Private`k\[Psi]p, yukawaCode`Private`symFactor, 
      yukawaCode`Private`perm, yukawaCode`Private`scalarPiece, 
      yukawaCode`Private`fermionPiece, yukawaCode`Private`myPrint = 
       If[OptionValue[yukawaCode`Private`debug], Print, 
        yukawaCode`Private`skipPrint], yukawaCode`Private`debug1 = 
       OptionValue[yukawaCode`Private`debug], 
      yukawaCode`Private`showDiagram1 = OptionValue[
        yukawaCode`Private`showDiagram]}, 
     yukawaCode`Private`da = Total[-yukawaCode`Private`aDiff]; 
      yukawaCode`Private`db = Total[-yukawaCode`Private`bDiff]; 
      yukawaCode`Private`myPrint[
       "\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(a\)]\)=", 
       yukawaCode`Private`da, 
       ",\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(b\)]\)=", 
       yukawaCode`Private`db*"."]; Which[yukawaCode`Private`da < 0 || 
        (yukawaCode`Private`da == 0 && yukawaCode`Private`db < 0), 
       yukawaCode`Private`myPrint[
         "\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(a\)]\)<0 or", 
         "(\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(a\)]\)=0 and", 
         "\!\(\*SubscriptBox[\(\[CapitalDelta]n\), \(b\)]\)<0), swapping", 
         "k\[LeftRightArrow]k'.\n"]; Return[yukawaCode`Private`yukawaQuartic[
          {yukawaCode`Private`ap, yukawaCode`Private`bp}, 
          {yukawaCode`Private`a, yukawaCode`Private`b}, 
          yukawaCode`Private`debug -> yukawaCode`Private`debug1, 
          yukawaCode`Private`showDiagram -> 
           yukawaCode`Private`showDiagram1]], yukawaCode`Private`da == 2 && 
        yukawaCode`Private`db == 2, yukawaCode`Private`myPrint[
         "Contraction (if possible) is zero mode."]; Return[0]]; 
      yukawaCode`Private`aDiffAbs = Total[Abs[yukawaCode`Private`aDiff]]; 
      yukawaCode`Private`bDiffAbs = Total[Abs[yukawaCode`Private`bDiff]]; 
      yukawaCode`Private`myPrint["|\[Delta]a|=", 
       yukawaCode`Private`aDiffAbs]; yukawaCode`Private`myPrint[
       "|\[Delta]b|=", yukawaCode`Private`aDiffAbs]; 
      yukawaCode`Private`flagScalarFree = 
       Which[yukawaCode`Private`aDiffAbs == 2, False, 
        yukawaCode`Private`aDiffAbs == 0, True, True, 
        yukawaCode`Private`myPrint[
          "|\[Delta]a| \[NotEqual] 0 or 2, contraction is impossible."]; 
         Return[0]]; yukawaCode`Private`flagFermionFree = 
       Which[yukawaCode`Private`bDiffAbs == 2, False, 
        yukawaCode`Private`bDiffAbs == 0, True, True, 
        yukawaCode`Private`myPrint[
          "|\[Delta]b| \[NotEqual] 0 or 2, contraction is impossible."]; 
         Return[0]]; yukawaCode`Private`scalarPiece = 
       Flatten[Reap[If[yukawaCode`Private`flagScalarFree, 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]a|=0, scalar part contracing same k from both \
sides."]; yukawaCode`Private`myPrint[
             "--- Iterating all possible scalar k\[Element]", 
             "\!\(\*OverscriptBox[\(k\),\(\[RightVector]\)]\)=", 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`a]]; 
            Block[{yukawaCode`Private`k = 1}, Scan[(If[#1 != 0, 
                 Sow[{2*#1, yukawaCode`Private`k, 1, yukawaCode`Private`k, 
                    -1}]; yukawaCode`Private`myPrint["    sending \
{\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\t\t\(3\)]]\)}=", DisplayForm[{2*#1, SuperscriptBox[
                      yukawaCode`Private`k, "+"], SuperscriptBox[
                      yukawaCode`Private`k, "-"]}]]; Sow[{2*#1, 
                    yukawaCode`Private`k, -1, yukawaCode`Private`k, 1}]; 
                  yukawaCode`Private`myPrint["    sending \
{\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\t\t\(3\)]]\)}=", DisplayForm[{2*#1, SuperscriptBox[
                      yukawaCode`Private`k, "-"], SuperscriptBox[
                      yukawaCode`Private`k, "+"]}]]; ]; 
                yukawaCode`Private`k++; ) & , yukawaCode`Private`a]]; 
            yukawaCode`Private`myPrint["--- Iteration finished"], 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]a|=2, scalar part contracing a pair of different k."]\
; yukawaCode`Private`aBar = Ramp[yukawaCode`Private`aDiff]; 
            yukawaCode`Private`apBar = Ramp[-yukawaCode`Private`aDiff]; 
            yukawaCode`Private`k\[Phi] = yukawaCode`Private`cfBinReconstruct[
              yukawaCode`Private`aBar]; yukawaCode`Private`k\[Phi]p = 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`apBar]; 
            yukawaCode`Private`myPrint["k=", yukawaCode`Private`k\[Phi], 
             ", k'=", yukawaCode`Private`k\[Phi]p]; 
            yukawaCode`Private`symFactor = 2*Times @@ Table[
                Sqrt[Binomial[yukawaCode`Private`a[[yukawaCode`Private`k]], 
                   yukawaCode`Private`aBar[[yukawaCode`Private`k]]]/
                  yukawaCode`Private`aBar[[yukawaCode`Private`k]]!], 
                {yukawaCode`Private`k, DeleteDuplicates[
                  yukawaCode`Private`k\[Phi]]}]*Times @@ Table[
                Sqrt[Binomial[yukawaCode`Private`ap[[yukawaCode`Private`kp]], 
                   yukawaCode`Private`apBar[[yukawaCode`Private`kp]]]/
                  yukawaCode`Private`apBar[[yukawaCode`Private`kp]]!], 
                {yukawaCode`Private`kp, DeleteDuplicates[
                  yukawaCode`Private`k\[Phi]p]}]; {yukawaCode`Private`k1, 
              yukawaCode`Private`k3} = Join[yukawaCode`Private`k\[Phi], 
              yukawaCode`Private`k\[Phi]p]; {yukawaCode`Private`s1, 
              yukawaCode`Private`s3} = Join[yukawaCode`Private`k\[Phi]*0 - 1, 
              yukawaCode`Private`k\[Phi]p*0 + 1]; 
            Sow[{yukawaCode`Private`symFactor, yukawaCode`Private`k1, 
              yukawaCode`Private`s1, yukawaCode`Private`k3, 
              yukawaCode`Private`s3}]; yukawaCode`Private`myPrint["    \
sending {\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\(3\)]]\)}=", DisplayForm[
              {yukawaCode`Private`symFactor, SuperscriptBox[
                yukawaCode`Private`k1, yukawaCode`Private`sgn[
                 yukawaCode`Private`s1]], SuperscriptBox[
                yukawaCode`Private`k3, yukawaCode`Private`sgn[
                 yukawaCode`Private`s3]]}]]; 
            Sow[{yukawaCode`Private`symFactor, yukawaCode`Private`k3, 
              yukawaCode`Private`s3, yukawaCode`Private`k1, 
              yukawaCode`Private`s1}]; yukawaCode`Private`myPrint["    \
sending {\!\(\*SubscriptBox[OverscriptBox[\(S\), \
\(~\)],\n\t\t\(sym\)]\),\!\(\*SubsuperscriptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\t\(3\)]]\)}=", DisplayForm[
              {yukawaCode`Private`symFactor, SuperscriptBox[
                yukawaCode`Private`k3, yukawaCode`Private`sgn[
                 yukawaCode`Private`s3]], SuperscriptBox[
                yukawaCode`Private`k1, yukawaCode`Private`sgn[
                 yukawaCode`Private`s1]]}]]; ]][[2]], 1]; 
      yukawaCode`Private`fermionPiece = 
       Flatten[Reap[If[yukawaCode`Private`flagFermionFree, 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]b|=0, fermion part contracing same k from both \
sides."]; yukawaCode`Private`myPrint[
             "--- Iterating all possible fermion k\[Element]", 
             "\!\(\*OverscriptBox[\(k\),\(\[RightVector]\)]\)=", 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`b]]; 
            Block[{yukawaCode`Private`k = 1}, Scan[(If[#1 != 0, 
                 Sow[{1, yukawaCode`Private`k, 1, yukawaCode`Private`k, -1}]; 
                  yukawaCode`Private`myPrint["    sending \
{(-1\!\(\*SuperscriptBox[\()\),\n\t\t\t\(\[Sigma]\)]\),\!\(\*SubsuperscriptBo\
x[\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\t\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\t\t\(4\)]]\)}=", DisplayForm[{1, SuperscriptBox[
                      yukawaCode`Private`k, "-"], SuperscriptBox[
                      yukawaCode`Private`k, "+"]}]]; ]; 
                yukawaCode`Private`k++; ) & , yukawaCode`Private`b]]; 
            yukawaCode`Private`myPrint["--- Iteration finished"], 
           yukawaCode`Private`myPrint[
             "\n|\[Delta]b|=2, fermion part contracing a pair of different \
k."]; yukawaCode`Private`bBar = Ramp[yukawaCode`Private`bDiff]; 
            yukawaCode`Private`bpBar = Ramp[-yukawaCode`Private`bDiff]; 
            yukawaCode`Private`k\[Psi] = yukawaCode`Private`cfBinReconstruct[
              yukawaCode`Private`bBar]; yukawaCode`Private`k\[Psi]p = 
             yukawaCode`Private`cfBinReconstruct[yukawaCode`Private`bpBar]; 
            yukawaCode`Private`myPrint["k=", yukawaCode`Private`k\[Psi], 
             ", k'=", yukawaCode`Private`k\[Psi]p]; yukawaCode`Private`perm = 
             Times @@ Table[(-1)^Total[Take[yukawaCode`Private`b, 
                   yukawaCode`Private`k]], {yukawaCode`Private`k, 
                 yukawaCode`Private`k\[Psi]}]*Times @@ Table[
                (-1)^Total[Take[yukawaCode`Private`bp, 
                   yukawaCode`Private`kp]], {yukawaCode`Private`kp, 
                 yukawaCode`Private`k\[Psi]p}]*If[Length[
                 yukawaCode`Private`k\[Psi]] == 1, 1, -1]; 
            {yukawaCode`Private`k4, yukawaCode`Private`k2} = 
             Join[Reverse[yukawaCode`Private`k\[Psi]], 
              yukawaCode`Private`k\[Psi]p]; {yukawaCode`Private`s4, 
              yukawaCode`Private`s2} = Join[yukawaCode`Private`k\[Psi]*0 - 1, 
              yukawaCode`Private`k\[Psi]p*0 + 1]; yukawaCode`Private`myPrint[
             "    sending \
{(-1\!\(\*SuperscriptBox[\()\),\n\t\t\(\[Sigma]\)]\),\!\(\*SubsuperscriptBox[\
\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\t\(4\)]]\)}=", DisplayForm[{yukawaCode`Private`perm, 
               SuperscriptBox[yukawaCode`Private`k2, yukawaCode`Private`sgn[
                 yukawaCode`Private`s2]], SuperscriptBox[
                yukawaCode`Private`k4, yukawaCode`Private`sgn[
                 yukawaCode`Private`s4]]}]]; Sow[{yukawaCode`Private`perm, 
              yukawaCode`Private`k2, yukawaCode`Private`s2, 
              yukawaCode`Private`k4, yukawaCode`Private`s4}]; ]][[2]], 1]; 
      yukawaCode`Private`myPrint["\n--- Assembling Diagrams"]; 
      yukawaCode`Private`myPrint["    DIAGRAM \[Congruent] \
(-1\!\(\*SuperscriptBox[\()\),\n\t\(\[Sigma]\)]\) \
\!\(\*SubscriptBox[OverscriptBox[\(S\), \(~\)], \(sym\)]\) \[Times] \n", 
       "      ", DisplayForm[FractionBox["-\!\(\*SubscriptBox[\(s\),\n\t\(1\)\
]\)\!\(\*SubscriptBox[\(s\), \
\(2\)]\)\!\(\*SubscriptBox[\(s\),\n\t\(3\)]\)\!\(\*SubscriptBox[\(s\), \
\(4\)]\)", SqrtBox["\!\(\*SubscriptBox[\(k\),\n\t\(1\)]\)\!\(\*SubscriptBox[\
\(k\), \
\(3\)]\)2\!\(\*SubscriptBox[\(k\),\n\t\(2\)]\)(\!\(\*SubscriptBox[\(k\), \
\(2\)]\)+1)2\!\(\*SubscriptBox[\(k\),\n\t\(4\)]\)(\!\(\*SubscriptBox[\(k\), \
\(4\)]\)+1)"]]], DisplayForm[SubscriptBox[yukawaCode`Private`g, 
         Row[{yukawaCode`Private`\[Phi], yukawaCode`Private`\[Psi], 
           FractionBox[1, "\[PartialD]"], yukawaCode`Private`\[Phi], 
           yukawaCode`Private`\[Psi]}]]], "(\!\(\*SubsuperscriptBox[\(k\), \
\(1\), SubscriptBox[\(s\),\n\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\(3\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\(4\)]]\))"]; 
      Return[Total[Outer[yukawaCode`Private`yukawaQuarticDiagram[
          yukawaCode`Private`debug1, yukawaCode`Private`showDiagram1], 
         yukawaCode`Private`fermionPiece, yukawaCode`Private`scalarPiece, 1], 
        2]]]
 
Options[yukawaCode`Private`yukawaQuartic] = 
    {yukawaCode`Private`debug -> False, yukawaCode`Private`showDiagram -> 
      False}
 
yukawaCode`Private`sgn[-1] = "-"
 
yukawaCode`Private`sgn[1] = "+"
 
yukawaCode`Private`yukawaQuarticDiagram[yukawaCode`Private`debug_, 
      yukawaCode`Private`showDiagram_][{yukawaCode`Private`perm_, 
      yukawaCode`Private`k2_, yukawaCode`Private`s2_, yukawaCode`Private`k4_, 
      yukawaCode`Private`s4_}, {yukawaCode`Private`symFactor_, 
      yukawaCode`Private`k1_, yukawaCode`Private`s1_, yukawaCode`Private`k3_, 
      yukawaCode`Private`s3_}] := 
    Block[{yukawaCode`Private`diagramResult = yukawaCode`Private`symFactor*
        yukawaCode`Private`perm*(-Sqrt[yukawaCode`Private`k1*
            yukawaCode`Private`k3*2*yukawaCode`Private`k2*
            (yukawaCode`Private`k2 + 1)*2*yukawaCode`Private`k4*
            (yukawaCode`Private`k4 + 1)]^(-1))*yukawaCode`Private`GY[
         yukawaCode`Private`k1, yukawaCode`Private`k2, yukawaCode`Private`k3, 
         yukawaCode`Private`k4, yukawaCode`Private`s1, yukawaCode`Private`s2, 
         yukawaCode`Private`s3, yukawaCode`Private`s4], 
      yukawaCode`Private`myPrint = If[yukawaCode`Private`debug, Print, 
        yukawaCode`Private`skipPrint], yukawaCode`Private`myDiagram = 
       If[yukawaCode`Private`showDiagram, yukawaCode`Private`diagram, 
        yukawaCode`Private`skipDiagram]}, 
     yukawaCode`Private`myPrint["\n    \
\[FilledSquare]{\!\(\*SubscriptBox[OverscriptBox[\(S\),\n\t\(~\)], \
\(sym\)]\),(-1\!\(\*SuperscriptBox[\()\),\n\t\(\[Sigma]\)]\),\!\(\*Subsupersc\
riptBox[\(k\), \(1\), \
SubscriptBox[\(s\),\n\t\(1\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(2\), \
SubscriptBox[\(s\),\n\t\(2\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(3\), \
SubscriptBox[\(s\),\n\t\(3\)]]\),\!\(\*SubsuperscriptBox[\(k\), \(4\), \
SubscriptBox[\(s\),\n\t\(4\)]]\)} = ", DisplayForm[
        {yukawaCode`Private`symFactor, yukawaCode`Private`perm, 
         SuperscriptBox[yukawaCode`Private`k1, yukawaCode`Private`sgn[
           yukawaCode`Private`s1]], SuperscriptBox[yukawaCode`Private`k2, 
          yukawaCode`Private`sgn[yukawaCode`Private`s2]], 
         SuperscriptBox[yukawaCode`Private`k3, yukawaCode`Private`sgn[
           yukawaCode`Private`s3]], SuperscriptBox[yukawaCode`Private`k4, 
          yukawaCode`Private`sgn[yukawaCode`Private`s4]]}]]; 
      yukawaCode`Private`myPrint["      ", yukawaCode`Private`myDiagram[
         yukawaCode`Private`s1, yukawaCode`Private`s2, yukawaCode`Private`s3, 
         yukawaCode`Private`s4][yukawaCode`Private`k1, yukawaCode`Private`k2, 
        yukawaCode`Private`k3, yukawaCode`Private`k4], " = ", 
       yukawaCode`Private`diagramResult]; yukawaCode`Private`diagramResult]
 
yukawaCode`Private`GY[yukawaCode`Private`k1_, yukawaCode`Private`k2_, 
     yukawaCode`Private`k3_, yukawaCode`Private`k4_, yukawaCode`Private`s1_, 
     yukawaCode`Private`s2_, yukawaCode`Private`s3_, 
     yukawaCode`Private`s4_] := 
    Block[{yukawaCode`Private`k = yukawaCode`Private`s1*yukawaCode`Private`s2*
         yukawaCode`Private`k1 + yukawaCode`Private`k2, 
      yukawaCode`Private`sk, yukawaCode`Private`l}, 
     -(If[yukawaCode`Private`k >= 0, yukawaCode`Private`sk = 1; 
         yukawaCode`Private`l = yukawaCode`Private`k, 
        yukawaCode`Private`sk = -1; yukawaCode`Private`l = 
          -yukawaCode`Private`k - 1]; yukawaCode`Private`s1*
         yukawaCode`Private`k1*(yukawaCode`Private`GY2[yukawaCode`Private`l, 
           yukawaCode`Private`k3, yukawaCode`Private`k4, 
           yukawaCode`Private`sk*yukawaCode`Private`s2*yukawaCode`Private`s3, 
           yukawaCode`Private`sk*yukawaCode`Private`s2*
            yukawaCode`Private`s4] - yukawaCode`Private`GY2[
           yukawaCode`Private`k1, yukawaCode`Private`k3, 
           yukawaCode`Private`k4, yukawaCode`Private`s1*
            yukawaCode`Private`s3, yukawaCode`Private`s1*
            yukawaCode`Private`s4]) - yukawaCode`Private`s1*(1/2)*
         yukawaCode`Private`GY1[yukawaCode`Private`k1, yukawaCode`Private`k3, 
          yukawaCode`Private`k4, yukawaCode`Private`s1*yukawaCode`Private`s3, 
          yukawaCode`Private`s1*yukawaCode`Private`s4] - 
        yukawaCode`Private`s2*(1/2)*yukawaCode`Private`GY1[
          yukawaCode`Private`k2, yukawaCode`Private`k3, 
          yukawaCode`Private`k4, yukawaCode`Private`s2*yukawaCode`Private`s3, 
          yukawaCode`Private`s2*yukawaCode`Private`s4] + 
        yukawaCode`Private`sk*yukawaCode`Private`s2*(1/2)*
         yukawaCode`Private`GY1[yukawaCode`Private`l, yukawaCode`Private`k3, 
          yukawaCode`Private`k4, yukawaCode`Private`sk*yukawaCode`Private`s2*
           yukawaCode`Private`s3, yukawaCode`Private`sk*yukawaCode`Private`s2*
           yukawaCode`Private`s4] + 
        If[yukawaCode`Private`s1*yukawaCode`Private`s2 < 0 && 
          yukawaCode`Private`k1 <= yukawaCode`Private`k2, 
         yukawaCode`Private`k1*yukawaCode`Private`GYLog[
           yukawaCode`Private`k3, yukawaCode`Private`k4, 
           yukawaCode`Private`s3, yukawaCode`Private`s4], 0])]
 
yukawaCode`Private`GY2 = Function[{yukawaCode`Private`k, 
      yukawaCode`Private`k3, yukawaCode`Private`k4, yukawaCode`Private`s3, 
      yukawaCode`Private`s4}, Which[yukawaCode`Private`s3 > 0 && 
       yukawaCode`Private`s4 > 0, 0, yukawaCode`Private`s3 < 0 && 
       yukawaCode`Private`s4 > 0, yukawaCode`Private`k - 
       yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`k3] + 
       If[yukawaCode`Private`k4 <= yukawaCode`Private`k3, 
        -((1 + yukawaCode`Private`k4)*(yukawaCode`Private`k - 
           yukawaCode`Private`hsum[yukawaCode`Private`k, 
            yukawaCode`Private`k3 - yukawaCode`Private`k4])), 0] + 
       If[1 + yukawaCode`Private`k4 <= yukawaCode`Private`k3, 
        yukawaCode`Private`k4*(yukawaCode`Private`k - yukawaCode`Private`hsum[
           yukawaCode`Private`k, -1 + yukawaCode`Private`k3 - 
            yukawaCode`Private`k4]), 0], yukawaCode`Private`s3 > 0 && 
       yukawaCode`Private`s4 < 0, yukawaCode`Private`k - 
       (1 + yukawaCode`Private`k4)*yukawaCode`Private`hsum[
         yukawaCode`Private`k, yukawaCode`Private`k4] + 
       yukawaCode`Private`k4*yukawaCode`Private`hsum[yukawaCode`Private`k, 
         1 + yukawaCode`Private`k4] + If[yukawaCode`Private`k3 <= 
         yukawaCode`Private`k4, -((1 + yukawaCode`Private`k4)*
          (yukawaCode`Private`k - yukawaCode`Private`hsum[
            yukawaCode`Private`k, -yukawaCode`Private`k3 + 
             yukawaCode`Private`k4])), 0] + If[yukawaCode`Private`k3 <= 
         1 + yukawaCode`Private`k4, yukawaCode`Private`k4*
         (yukawaCode`Private`k - yukawaCode`Private`hsum[
           yukawaCode`Private`k, 1 - yukawaCode`Private`k3 + 
            yukawaCode`Private`k4]), 0], yukawaCode`Private`s3 < 0 && 
       yukawaCode`Private`s4 < 0, yukawaCode`Private`k - 
       yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`k3] - 
       (1 + yukawaCode`Private`k4)*yukawaCode`Private`hsum[
         yukawaCode`Private`k, yukawaCode`Private`k4] + 
       yukawaCode`Private`k4*yukawaCode`Private`hsum[yukawaCode`Private`k, 
         1 + yukawaCode`Private`k4] + (1 + yukawaCode`Private`k4)*
        yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`k3 + 
          yukawaCode`Private`k4] - yukawaCode`Private`k4*
        yukawaCode`Private`hsum[yukawaCode`Private`k, 
         1 + yukawaCode`Private`k3 + yukawaCode`Private`k4], True, 0]]
 
yukawaCode`Private`hsum[yukawaCode`Private`k_, yukawaCode`Private`p_] := 
    yukawaCode`Private`hsum[yukawaCode`Private`k, yukawaCode`Private`p] = 
     If[yukawaCode`Private`k > yukawaCode`Private`p, 
      yukawaCode`Private`k - yukawaCode`Private`p - yukawaCode`Private`p*
        (yukawaCode`Private`myHarmonic[yukawaCode`Private`k] - 
         yukawaCode`Private`myHarmonic[yukawaCode`Private`p]), 0]
 
yukawaCode`Private`myHarmonic[yukawaCode`Private`p_] := 
    yukawaCode`Private`myHarmonic[yukawaCode`Private`p] = 
     HarmonicNumber[Abs[yukawaCode`Private`p]]
 
yukawaCode`Private`GYLog = Function[{yukawaCode`Private`k3, 
      yukawaCode`Private`k4, yukawaCode`Private`s3, yukawaCode`Private`s4}, 
     Which[yukawaCode`Private`s3 == -1 && yukawaCode`Private`s4 == -1, 
      yukawaCode`Private`k3*(-yukawaCode`Private`myHarmonic[
          yukawaCode`Private`k3] + yukawaCode`Private`myHarmonic[
         yukawaCode`Private`k3 + yukawaCode`Private`k4]), 
      yukawaCode`Private`s3 == -1 && yukawaCode`Private`s4 == 1, 
      -(yukawaCode`Private`k3*yukawaCode`Private`myHarmonic[
          yukawaCode`Private`k3]) + (yukawaCode`Private`k3 - 
         yukawaCode`Private`k4)*(1 + yukawaCode`Private`k4)*
        yukawaCode`Private`myHarmonic[yukawaCode`Private`k3 - 
          yukawaCode`Private`k4] + yukawaCode`Private`k4*
        (-1 + (1 - yukawaCode`Private`k3 + yukawaCode`Private`k4)*
          yukawaCode`Private`myHarmonic[1 - yukawaCode`Private`k3 + 
            yukawaCode`Private`k4]), yukawaCode`Private`s3 == 1 && 
       yukawaCode`Private`s4 == -1, yukawaCode`Private`k4 + 
       yukawaCode`Private`k3*yukawaCode`Private`myHarmonic[
         yukawaCode`Private`k3] + (1 + yukawaCode`Private`k4)*
        (-yukawaCode`Private`k3 + yukawaCode`Private`k4)*
        yukawaCode`Private`myHarmonic[yukawaCode`Private`k3 - 
          yukawaCode`Private`k4] + (-1 + yukawaCode`Private`k3 - 
         yukawaCode`Private`k4)*yukawaCode`Private`k4*
        yukawaCode`Private`myHarmonic[1 - yukawaCode`Private`k3 + 
          yukawaCode`Private`k4], yukawaCode`Private`s3 == 1 && 
       yukawaCode`Private`s4 == 1, yukawaCode`Private`k3*
       (yukawaCode`Private`myHarmonic[yukawaCode`Private`k3] - 
        yukawaCode`Private`myHarmonic[yukawaCode`Private`k3 + 
          yukawaCode`Private`k4]), True, Print["exception"]; Abort[]; ]]
 
yukawaCode`Private`diagram[1, -1, 1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection, 
      yukawaCode`Private`order, yukawaCode`Private`lblSty = 
       Function[yukawaCode`Private`txt, Style[yukawaCode`Private`txt, 
         FontFamily -> "Times", FontSize -> 14]], yukawaCode`Private`k3p, 
      yukawaCode`Private`k1p, yukawaCode`Private`kk3p, 
      yukawaCode`Private`kk1p}, 
     If[yukawaCode`Private`k3 < yukawaCode`Private`k1 || 
        (yukawaCode`Private`k3 == yukawaCode`Private`k1 && 
         yukawaCode`Private`toggleIdenticalK1K3Swap02), 
       yukawaCode`Private`k3p = yukawaCode`Private`k1; 
        yukawaCode`Private`k1p = yukawaCode`Private`k3; 
        yukawaCode`Private`kk3p = 1; yukawaCode`Private`kk1p = 3; 
        yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; , yukawaCode`Private`k3p = 
         yukawaCode`Private`k3; yukawaCode`Private`k1p = 
         yukawaCode`Private`k1; yukawaCode`Private`kk3p = 3; 
        yukawaCode`Private`kk1p = 1; yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; ]; If[yukawaCode`Private`k3 == 
        yukawaCode`Private`k1, yukawaCode`Private`toggleIdenticalK1K3Swap02 = 
         !yukawaCode`Private`toggleIdenticalK1K3Swap02]; 
      yukawaCode`Private`order = Ordering[Ordering[VertexList[
          yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{1, 1}, {0, 1/2}, {1, 1/2}, {1, 0}, {1/2, 2/3}, {1/2, 1/3}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 1, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k1p, "+"]}]]], 
           {After, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                 yukawaCode`Private`k, 2, "-"], "=", SuperscriptBox[
                 yukawaCode`Private`k2, "-"]}]]]], {Before, Above}], 
         3 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 3, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k3p, "+"]}]]], 
           {After, Below}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[-1, 1, -1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection, 
      yukawaCode`Private`order, yukawaCode`Private`lblSty = 
       Function[yukawaCode`Private`txt, Style[yukawaCode`Private`txt, 
         FontFamily -> "Times", FontSize -> 14]], yukawaCode`Private`k3p, 
      yukawaCode`Private`k1p, yukawaCode`Private`kk3p, 
      yukawaCode`Private`kk1p}, 
     If[yukawaCode`Private`k3 < yukawaCode`Private`k1 || 
        (yukawaCode`Private`k3 == yukawaCode`Private`k1 && 
         yukawaCode`Private`toggleIdenticalK1K3Swap20), 
       yukawaCode`Private`k3p = yukawaCode`Private`k1; 
        yukawaCode`Private`k1p = yukawaCode`Private`k3; 
        yukawaCode`Private`kk3p = 1; yukawaCode`Private`kk1p = 3; 
        yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; , yukawaCode`Private`k3p = 
         yukawaCode`Private`k3; yukawaCode`Private`k1p = 
         yukawaCode`Private`k1; yukawaCode`Private`kk3p = 3; 
        yukawaCode`Private`kk1p = 1; yukawaCode`Private`connection = 
         {Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
           Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
          Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
           Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
          Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
           Thickness[0.06]]}; ]; If[yukawaCode`Private`k3 == 
        yukawaCode`Private`k1, yukawaCode`Private`toggleIdenticalK1K3Swap20 = 
         !yukawaCode`Private`toggleIdenticalK1K3Swap20]; 
      yukawaCode`Private`order = Ordering[Ordering[VertexList[
          yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{0, 1}, {1, 1}, {0, 0}, {1, 0}, {1/2, 4/5}, {1/2, 1/5}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 
                 yukawaCode`Private`kk1p, "-"], "=", SuperscriptBox[
                 yukawaCode`Private`k1p, "-"]}]]]], {Before, Above}], 
         2 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 2, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k2, "+"]}]]], 
           {After, Above}], 3 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                 yukawaCode`Private`k, yukawaCode`Private`kk3p, "-"], "=", 
                SuperscriptBox[yukawaCode`Private`k3p, "-"]}]]]], 
           {Before, Below}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[-1, 1, 1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection = 
       {Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, yukawaCode`Private`order, 
      yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, yukawaCode`Private`order = 
       Ordering[Ordering[VertexList[yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{0, 1/2}, {1, 1/2}, {1, 1}, {1, 0}, {1/2, 2/3}, {1/2, 1/3}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 1, "-"], 
                "=", SuperscriptBox[yukawaCode`Private`k1, "-"]}]]]], 
           {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 2, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k2, "+"]}]]], 
           {After, Below}], 3 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 3, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k3, "+"]}]]], 
           {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[1, 1, -1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection = 
       {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, yukawaCode`Private`order, 
      yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, yukawaCode`Private`order = 
       Ordering[Ordering[VertexList[yukawaCode`Private`connection]]]; 
      Graph[yukawaCode`Private`connection, VertexCoordinates -> 
        {{0, 1/2}, {1, 1/2}, {1, 1}, {1, 0}, {1/2, 2/3}, {1/2, 1/3}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 3, "-"], 
                "=", SuperscriptBox[yukawaCode`Private`k3, "-"]}]]]], 
           {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 2, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k2, "+"]}]]], 
           {After, Below}], 3 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 1, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k1, "+"]}]]], 
           {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[-1, -1, 1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := 
    Block[{yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, 
     Graph[{Style[UndirectedEdge[1, yukawaCode`Private`v1], Thickness[0.02], 
        Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
       Style[UndirectedEdge[3, yukawaCode`Private`v2], Thickness[0.02], 
        Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
       Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
        Thickness[0.06]]}, VertexCoordinates -> {{0, 1}, {1/5, 1/2}, {0, 0}, 
        {1, 1}, {4/5, 1/2}, {1, 0}}, VertexStyle -> Black, 
      VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
        yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
      EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
       {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
            RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 1, "-"], 
               "=", SuperscriptBox[yukawaCode`Private`k1, "-"]}]]]], 
          {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
           DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                yukawaCode`Private`k, 2, "-"], "=", SuperscriptBox[
                yukawaCode`Private`k2, "-"]}]]]], {Before, Below}], 
        3 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
            RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 3, "+"], "=", 
              SuperscriptBox[yukawaCode`Private`k3, "+"]}]]], 
          {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
           DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
               "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
          {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`diagram[1, -1, -1, 1][yukawaCode`Private`k1_, 
     yukawaCode`Private`k2_, yukawaCode`Private`k3_, 
     yukawaCode`Private`k4_] := Block[{yukawaCode`Private`connection = 
       {Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, yukawaCode`Private`order, 
      yukawaCode`Private`lblSty = Function[yukawaCode`Private`txt, 
        Style[yukawaCode`Private`txt, FontFamily -> "Times", 
         FontSize -> 14]]}, yukawaCode`Private`order = 
       Ordering[Ordering[VertexList[{Style[UndirectedEdge[1, 
             yukawaCode`Private`v2], Thickness[0.02], Dashed], 
           UndirectedEdge[2, yukawaCode`Private`v1], 
           Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
            Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
           Style[UndirectedEdge[yukawaCode`Private`v1, 
             yukawaCode`Private`v2], Thickness[0.06]]}]]]; 
      Graph[{Style[UndirectedEdge[1, yukawaCode`Private`v2], Thickness[0.02], 
         Dashed], UndirectedEdge[2, yukawaCode`Private`v1], 
        Style[UndirectedEdge[3, yukawaCode`Private`v1], Thickness[0.02], 
         Dashed], UndirectedEdge[4, yukawaCode`Private`v2], 
        Style[UndirectedEdge[yukawaCode`Private`v1, yukawaCode`Private`v2], 
         Thickness[0.06]]}, VertexCoordinates -> 
        {{0, 1}, {0, 0}, {1, 1}, {1, 0}, {1/5, 1/2}, {4/5, 1/2}}[[
         yukawaCode`Private`order]], VertexStyle -> Black, 
       VertexShapeFunction -> {yukawaCode`Private`v1 -> None, 
         yukawaCode`Private`v2 -> None}, EdgeShapeFunction -> "Line", 
       EdgeStyle -> Directive[Black, Opacity[1]], VertexLabels -> 
        {1 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[Reverse[{SubsuperscriptBox[yukawaCode`Private`k, 3, "-"], 
                "=", SuperscriptBox[yukawaCode`Private`k3, "-"]}]]]], 
           {Before, Above}], 2 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[Reverse[{SubsuperscriptBox[
                 yukawaCode`Private`k, 2, "-"], "=", SuperscriptBox[
                 yukawaCode`Private`k2, "-"]}]]]], {Before, Below}], 
         3 -> Placed[yukawaCode`Private`lblSty[DisplayForm[
             RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 1, "+"], "=", 
               SuperscriptBox[yukawaCode`Private`k1, "+"]}]]], 
           {After, Above}], 4 -> Placed[yukawaCode`Private`lblSty[
            DisplayForm[RowBox[{SubsuperscriptBox[yukawaCode`Private`k, 4, 
                "+"], "=", SuperscriptBox[yukawaCode`Private`k4, "+"]}]]], 
           {After, Below}]}, ImageSize -> 200]]
 
yukawaCode`Private`toggleIdenticalK1K3Swap02 = False
 
yukawaCode`Private`toggleIdenticalK1K3Swap20 = False
 
Attributes[yukawaCode`Private`skipDiagram] = {HoldAll}
 
yukawaCode`Private`skipDiagram[yukawaCode`Private`expr1__] := 
    yukawaCode`Private`skipDiagram2
 
Attributes[yukawaCode`Private`skipDiagram2] = {HoldAll}
 
yukawaCode`Private`skipDiagram2[yukawaCode`Private`expr2__] := "DIAGRAM"
 
yukawaCode`Private`stateCount[yukawaCode`Private`lstOfLevels_] := 
    Total[(Length[#states] & ) /@ yukawaCode`Private`lstOfLevels]
